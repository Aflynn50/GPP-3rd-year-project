%parsed
Iteration 0:
solving
H = {
}
inc: 0; exc: 0
--------------------------------------------
Iteration 1:
solving
H = {
next_capturecount(V0, V1) :- agent(V0), int(V1).
}
inc: 0; exc: 1
--------------------------------------------
Iteration 2:
solving
H = {
next_capturecount(V0, V1) :- scoremap(V1, V1), agent(V0), int(V1).
}
inc: 1; exc: 1
--------------------------------------------
Iteration 3:
solving
H = {
next_capturecount(V0, V1) :- scoremap(V1, V1), agent(V0), int(V1).
next_capturecount(V0, V1) :- agent(V0), pos(V1), int(V1).
}
inc: 0; exc: 2
inc: 1; exc: 2
--------------------------------------------
Iteration 4:
solving
H = {
next_capturecount(V0, V1) :- scoremap(V1, V1), agent(V0), int(V1).
next_capturecount(V0, V1) :- scoremap(V1, V4), agent(V0), pos(V1), int(V1), pos(V4), int(V4).
}
inc: 0; exc: 3
inc: 1; exc: 3
--------------------------------------------
Iteration 5:
solving
H = {
next_capturecount(V0, V1) :- scoremap(V1, V1), agent(V0), int(V1).
next_capturecount(V0, V1) :- true_control(V0), agent(V0), pos(V1), int(V1).
}
inc: 0; exc: 4
inc: 1; exc: 4
--------------------------------------------
Iteration 6:
solving
H = {
next_capturecount(V0, V1) :- scoremap(V1, V1), agent(V0), int(V1).
next_capturecount(V0, V1) :- does_jump(V0, V1, V10, V14, V14), agent(V0), pos(V1), int(V1), pos(V10), int(V10), pos(V14), int(V14).
}
inc: 0; exc: 5
inc: 1; exc: 5
--------------------------------------------
Iteration 7:
solving
H = {
next_capturecount(V0, V1) :- scoremap(V1, V1), does_move(V25, V10, V14, V12, V12), agent(V0), int(V1), pos(V10), int(V10), pos(V12), int(V12), pos(V14), int(V14), agent(V25).
next_capturecount(V0, V1) :- does_jump(V0, V1, V10, V14, V14), agent(V0), pos(V1), int(V1), pos(V10), int(V10), pos(V14), int(V14).
}
inc: 2; exc: 5
