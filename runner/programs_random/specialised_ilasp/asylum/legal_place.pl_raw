%parsed
Iteration 0:
solving
H = {
}
inc: 0; exc: 0
--------------------------------------------
Iteration 1:
solving
H = {
}
inc: 1; exc: 0
--------------------------------------------
Iteration 2:
solving
H = {
}
inc: 1; exc: 0
--------------------------------------------
Iteration 3:
solving
H = {
}
inc: 1; exc: 0
--------------------------------------------
Iteration 4:
solving
H = {
legal_place(V0, V1, V2, V3) :- agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3).
}
inc: 0; exc: 1
inc: 1; exc: 1
inc: 1; exc: 1
inc: 1; exc: 1
--------------------------------------------
Iteration 5:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 2
inc: 1; exc: 2
inc: 1; exc: 2
inc: 1; exc: 2
--------------------------------------------
Iteration 6:
solving
H = {
legal_place(V0, V1, V2, V3) :- true_color(V1, V0), agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3).
}
inc: 0; exc: 3
inc: 1; exc: 3
inc: 1; exc: 3
inc: 1; exc: 3
--------------------------------------------
Iteration 7:
solving
H = {
legal_place(V0, V1, V2, V3) :- not true_control(V0), agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3).
}
inc: 0; exc: 4
inc: 1; exc: 4
inc: 1; exc: 4
inc: 1; exc: 4
--------------------------------------------
Iteration 8:
solving
H = {
legal_place(V0, V1, V2, V3) :- V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3).
}
inc: 0; exc: 5
inc: 1; exc: 5
inc: 1; exc: 5
inc: 1; exc: 5
--------------------------------------------
Iteration 9:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), true_color(V1, V0), agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 6
inc: 1; exc: 6
inc: 1; exc: 6
inc: 1; exc: 6
--------------------------------------------
Iteration 10:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), not true_control(V0), agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 7
inc: 1; exc: 7
inc: 1; exc: 7
inc: 1; exc: 7
--------------------------------------------
Iteration 11:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 8
inc: 1; exc: 8
inc: 1; exc: 8
inc: 1; exc: 8
--------------------------------------------
Iteration 12:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 9
inc: 1; exc: 9
inc: 1; exc: 9
inc: 1; exc: 9
--------------------------------------------
Iteration 13:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 10
inc: 1; exc: 10
inc: 1; exc: 10
inc: 1; exc: 10
--------------------------------------------
Iteration 14:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 11
inc: 1; exc: 11
inc: 1; exc: 11
inc: 1; exc: 11
--------------------------------------------
Iteration 15:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 12
inc: 1; exc: 12
inc: 1; exc: 12
inc: 1; exc: 12
--------------------------------------------
Iteration 16:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 13
inc: 1; exc: 13
inc: 1; exc: 13
inc: 1; exc: 13
--------------------------------------------
Iteration 17:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 14
inc: 1; exc: 14
inc: 1; exc: 14
inc: 1; exc: 14
--------------------------------------------
Iteration 18:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 15
inc: 1; exc: 15
inc: 1; exc: 15
inc: 1; exc: 15
--------------------------------------------
Iteration 19:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 16
inc: 1; exc: 16
inc: 1; exc: 16
inc: 1; exc: 16
--------------------------------------------
Iteration 20:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 17
inc: 1; exc: 17
inc: 1; exc: 17
inc: 1; exc: 17
--------------------------------------------
Iteration 21:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 18
inc: 1; exc: 18
inc: 1; exc: 18
inc: 1; exc: 18
--------------------------------------------
Iteration 22:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 19
inc: 1; exc: 19
inc: 1; exc: 19
inc: 1; exc: 19
--------------------------------------------
Iteration 23:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
inc: 0; exc: 20
inc: 1; exc: 20
inc: 1; exc: 20
inc: 1; exc: 20
--------------------------------------------
Iteration 24:
solving
H = {
legal_place(V0, V1, V2, V3) :- vertical(V2, V3, V2, V4), V1 = n3, agent(V0), piece_type(V1), file_type(V2), rank_type(V3), int(V3), rank_type(V4), int(V4).
}
