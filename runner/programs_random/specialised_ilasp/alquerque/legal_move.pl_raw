%parsed
Iteration 0:
solving
H = {
}
inc: 0; exc: 0
--------------------------------------------
Iteration 1:
solving
H = {
legal_move(V0, V1, V2, V3, V2) :- agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 1; exc: 0
--------------------------------------------
Iteration 2:
solving
H = {
legal_move(V0, V1, V2, V3, V2) :- agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
legal_move(V0, V1, V1, V2, V3) :- agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 2; exc: 0
--------------------------------------------
Iteration 3:
solving
H = {
legal_move(V0, V1, V2, V3, V2) :- agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
legal_move(V0, V1, V1, V2, V3) :- agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
legal_move(V0, V1, V2, V3, V3) :- agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 3; exc: 0
--------------------------------------------
Iteration 4:
solving
H = {
legal_move(V0, V1, V2, V3, V4) :- agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4).
}
inc: 0; exc: 1
inc: 1; exc: 1
inc: 2; exc: 1
inc: 3; exc: 1
--------------------------------------------
Iteration 5:
solving
H = {
legal_move(V0, V1, V2, V3, V4) :- vertical(V5, V1, V5, V5), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 2
inc: 1; exc: 2
inc: 2; exc: 2
inc: 3; exc: 2
--------------------------------------------
Iteration 6:
solving
H = {
legal_move(V0, V1, V2, V3, V4) :- vertical(V5, V3, V5, V1), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 3
inc: 1; exc: 3
inc: 2; exc: 3
inc: 3; exc: 3
--------------------------------------------
Iteration 7:
solving
H = {
legal_move(V0, V1, V2, V3, V4) :- vertical(V5, V3, V5, V1), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 4
inc: 1; exc: 4
inc: 2; exc: 4
inc: 3; exc: 4
--------------------------------------------
Iteration 8:
solving
H = {
legal_move(V0, V1, V2, V3, V4) :- vertical(V5, V3, V5, V1), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 5
inc: 1; exc: 5
inc: 2; exc: 5
inc: 3; exc: 5
--------------------------------------------
Iteration 9:
solving
H = {
legal_move(V0, V1, V2, V3, V4) :- vertical(V5, V3, V5, V1), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 6
inc: 1; exc: 6
inc: 2; exc: 6
inc: 3; exc: 6
--------------------------------------------
Iteration 10:
solving
H = {
legal_move(V0, V1, V2, V3, V4) :- vertical(V5, V3, V5, V1), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 7
inc: 1; exc: 7
inc: 2; exc: 7
inc: 3; exc: 7
--------------------------------------------
Iteration 11:
solving
H = {
legal_move(V0, V1, V2, V3, V4) :- vertical(V5, V3, V5, V1), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 8
inc: 1; exc: 8
inc: 2; exc: 8
inc: 3; exc: 8
--------------------------------------------
Iteration 12:
solving
H = {
legal_move(V0, V1, V2, V3, V4) :- vertical(V5, V3, V5, V1), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 9
inc: 1; exc: 9
inc: 2; exc: 9
inc: 3; exc: 9
--------------------------------------------
Iteration 13:
solving
H = {
legal_move(V0, V1, V2, V3, V4) :- slash(V5, V3, V1, V1), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 10
inc: 1; exc: 10
inc: 2; exc: 10
inc: 3; exc: 10
