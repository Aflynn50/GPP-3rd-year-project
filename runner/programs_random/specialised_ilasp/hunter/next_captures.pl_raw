%parsed
Iteration 0:
solving
H = {
}
inc: 0; exc: 0
--------------------------------------------
Iteration 1:
solving
H = {
next_captures(V0) :- pos(V0), int(V0).
}
inc: 0; exc: 1
--------------------------------------------
Iteration 2:
solving
H = {
next_captures(V0) :- succ(V0, V9), pos(V0), int(V0), pos(V9), int(V9).
}
inc: 0; exc: 2
--------------------------------------------
Iteration 3:
solving
H = {
next_captures(V0) :- scoremap(V0, V0), pos(V0), int(V0).
}
inc: 1; exc: 2
--------------------------------------------
Iteration 4:
solving
H = {
next_captures(V0) :- scoremap(V0, V8), pos(V0), int(V0), pos(V8), int(V8).
}
inc: 0; exc: 3
inc: 1; exc: 3
--------------------------------------------
Iteration 5:
solving
H = {
next_captures(V0) :- scoremap(V0, V8), true_step(V8), pos(V0), int(V0), pos(V8), int(V8).
}
inc: 2; exc: 3
--------------------------------------------
Iteration 6:
solving
H = {
next_captures(V0) :- true_captures(V15), pos(V0), int(V0), pos(V15), int(V15).
next_captures(V0) :- scoremap(V0, V0), pos(V0), int(V0).
}
inc: 0; exc: 4
inc: 1; exc: 4
inc: 2; exc: 4
--------------------------------------------
Iteration 7:
solving
H = {
next_captures(V0) :- succ(V0, V9), knightmove(V8, V8, V9, V0), not true_step(V8), pos(V0), int(V0), pos(V8), int(V8), pos(V9), int(V9).
}
inc: 0; exc: 5
inc: 1; exc: 5
inc: 2; exc: 5
--------------------------------------------
Iteration 8:
solving
H = {
next_captures(V0) :- succ(V0, V9), knightmove(V8, V8, V0, V9), not true_step(V8), pos(V0), int(V0), pos(V8), int(V8), pos(V9), int(V9).
}
inc: 0; exc: 6
inc: 1; exc: 6
inc: 2; exc: 6
