%parsed
Iteration 0:
solving
H = {
}
inc: 0; exc: 0
--------------------------------------------
Iteration 1:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3).
}
inc: 0; exc: 1
--------------------------------------------
Iteration 2:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- succ(V1, V40), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V40), score(V40), int(V40).
}
inc: 0; exc: 2
--------------------------------------------
Iteration 3:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- succ(V3, V72), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V72), score(V72), int(V72).
}
inc: 0; exc: 3
--------------------------------------------
Iteration 4:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- succ(V2, V3), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3).
}
inc: 0; exc: 4
--------------------------------------------
Iteration 5:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- start(V92, V1, V2), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), piece(V92).
}
inc: 0; exc: 5
--------------------------------------------
Iteration 6:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 6
--------------------------------------------
Iteration 7:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 7
--------------------------------------------
Iteration 8:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 8
--------------------------------------------
Iteration 9:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 9
--------------------------------------------
Iteration 10:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 10
--------------------------------------------
Iteration 11:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 11
--------------------------------------------
Iteration 12:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 12
--------------------------------------------
Iteration 13:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 13
--------------------------------------------
Iteration 14:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 14
--------------------------------------------
Iteration 15:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 15
--------------------------------------------
Iteration 16:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 16
--------------------------------------------
Iteration 17:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 17
--------------------------------------------
Iteration 18:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 18
--------------------------------------------
Iteration 19:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 19
--------------------------------------------
Iteration 20:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 20
--------------------------------------------
Iteration 21:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 21
--------------------------------------------
Iteration 22:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 22
--------------------------------------------
Iteration 23:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 23
--------------------------------------------
Iteration 24:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 24
--------------------------------------------
Iteration 25:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 25
--------------------------------------------
Iteration 26:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 26
--------------------------------------------
Iteration 27:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 27
--------------------------------------------
Iteration 28:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 28
--------------------------------------------
Iteration 29:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 29
--------------------------------------------
Iteration 30:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 30
--------------------------------------------
Iteration 31:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 31
--------------------------------------------
Iteration 32:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 32
--------------------------------------------
Iteration 33:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V3, V61), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V61), score(V61), int(V61).
}
inc: 0; exc: 33
--------------------------------------------
Iteration 34:
solving
H = {
legal_pawnmove(V0, V1, V2, V1, V3) :- plus2(V2, V72), agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V72), score(V72), int(V72).
}
inc: 0; exc: 34
