%parsed
Iteration 0:
solving
H = {
legal_jump(V0, V1, V2, V3, V4) :- valid_move(V0, V4, V4, V2, V4), agent(V0), pos(V1), pos(V2), pos(V3), pos(V4).
}
inc: 0; exc: 0
--------------------------------------------
Iteration 1:
solving
H = {
legal_jump(V0, V1, V2, V3, V4) :- valid_move(V0, V4, V4, V2, V4), agent(V0), pos(V1), pos(V2), pos(V3), pos(V4).
}
inc: 1; exc: 0
--------------------------------------------
Iteration 2:
solving
H = {
legal_jump(V0, V1, V2, V3, V4) :- valid_move(V0, V4, V4, V2, V4), agent(V0), pos(V1), pos(V2), pos(V3), pos(V4).
}
inc: 1; exc: 0
--------------------------------------------
Iteration 3:
solving
H = {
legal_jump(V0, V1, V2, V3, V4) :- valid_move(V0, V4, V4, V2, V4), agent(V0), pos(V1), pos(V2), pos(V3), pos(V4).
}
inc: 1; exc: 0
--------------------------------------------
Iteration 4:
solving
H = {
legal_jump(V0, V1, V2, V3, V4) :- valid_move(V0, V4, V4, V2, V4), agent(V0), pos(V1), pos(V2), pos(V3), pos(V4).
}
inc: 1; exc: 0
--------------------------------------------
Iteration 5:
solving
H = {
legal_jump(V0, V1, V2, V3, V4) :- valid_move(V0, V4, V4, V2, V4), agent(V0), pos(V1), pos(V2), pos(V3), pos(V4).
}
inc: 1; exc: 0
--------------------------------------------
Iteration 6:
solving
H = {
legal_jump(V0, V1, V2, V3, V4) :- valid_move(V0, V4, V4, V2, V4), agent(V0), pos(V1), pos(V2), pos(V3), pos(V4).
}
inc: 1; exc: 0
--------------------------------------------
Iteration 7:
solving
H = {
legal_jump(V0, V1, V2, V3, V4) :- valid_move(V0, V4, V4, V2, V4), agent(V0), pos(V1), pos(V2), pos(V3), pos(V4).
}
inc: 1; exc: 0
--------------------------------------------
Iteration 8:
solving
H = {
legal_jump(V0, V1, V2, V3, V4) :- valid_move(V0, V4, V4, V2, V4), agent(V0), pos(V1), pos(V2), pos(V3), pos(V4).
}
inc: 1; exc: 0
--------------------------------------------
Iteration 9:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 1
inc: 1; exc: 1
inc: 1; exc: 1
inc: 1; exc: 1
inc: 1; exc: 1
inc: 1; exc: 1
inc: 1; exc: 1
inc: 1; exc: 1
inc: 1; exc: 1
--------------------------------------------
Iteration 10:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 2
inc: 1; exc: 2
inc: 1; exc: 2
inc: 1; exc: 2
inc: 1; exc: 2
inc: 1; exc: 2
inc: 1; exc: 2
inc: 1; exc: 2
inc: 1; exc: 2
--------------------------------------------
Iteration 11:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 3
inc: 1; exc: 3
inc: 1; exc: 3
inc: 1; exc: 3
inc: 1; exc: 3
inc: 1; exc: 3
inc: 1; exc: 3
inc: 1; exc: 3
inc: 1; exc: 3
--------------------------------------------
Iteration 12:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 4
inc: 1; exc: 4
inc: 1; exc: 4
inc: 1; exc: 4
inc: 1; exc: 4
inc: 1; exc: 4
inc: 1; exc: 4
inc: 1; exc: 4
inc: 1; exc: 4
--------------------------------------------
Iteration 13:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 5
inc: 1; exc: 5
inc: 1; exc: 5
inc: 1; exc: 5
inc: 1; exc: 5
inc: 1; exc: 5
inc: 1; exc: 5
inc: 1; exc: 5
inc: 1; exc: 5
--------------------------------------------
Iteration 14:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 6
inc: 1; exc: 6
inc: 1; exc: 6
inc: 1; exc: 6
inc: 1; exc: 6
inc: 1; exc: 6
inc: 1; exc: 6
inc: 1; exc: 6
inc: 1; exc: 6
--------------------------------------------
Iteration 15:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 7
inc: 1; exc: 7
inc: 1; exc: 7
inc: 1; exc: 7
inc: 1; exc: 7
inc: 1; exc: 7
inc: 1; exc: 7
inc: 1; exc: 7
inc: 1; exc: 7
--------------------------------------------
Iteration 16:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 8
inc: 1; exc: 8
inc: 1; exc: 8
inc: 1; exc: 8
inc: 1; exc: 8
inc: 1; exc: 8
inc: 1; exc: 8
inc: 1; exc: 8
inc: 1; exc: 8
--------------------------------------------
Iteration 17:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 9
inc: 1; exc: 9
inc: 1; exc: 9
inc: 1; exc: 9
inc: 1; exc: 9
inc: 1; exc: 9
inc: 1; exc: 9
inc: 1; exc: 9
inc: 1; exc: 9
--------------------------------------------
Iteration 18:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 10
inc: 1; exc: 10
inc: 1; exc: 10
inc: 1; exc: 10
inc: 1; exc: 10
inc: 1; exc: 10
inc: 1; exc: 10
inc: 1; exc: 10
inc: 1; exc: 10
--------------------------------------------
Iteration 19:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 11
inc: 1; exc: 11
inc: 1; exc: 11
inc: 1; exc: 11
inc: 1; exc: 11
inc: 1; exc: 11
inc: 1; exc: 11
inc: 1; exc: 11
inc: 1; exc: 11
--------------------------------------------
Iteration 20:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 12
inc: 1; exc: 12
inc: 1; exc: 12
inc: 1; exc: 12
inc: 1; exc: 12
inc: 1; exc: 12
inc: 1; exc: 12
inc: 1; exc: 12
inc: 1; exc: 12
--------------------------------------------
Iteration 21:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 13
inc: 1; exc: 13
inc: 1; exc: 13
inc: 1; exc: 13
inc: 1; exc: 13
inc: 1; exc: 13
inc: 1; exc: 13
inc: 1; exc: 13
inc: 1; exc: 13
--------------------------------------------
Iteration 22:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
inc: 0; exc: 14
inc: 1; exc: 14
inc: 1; exc: 14
inc: 1; exc: 14
inc: 1; exc: 14
inc: 1; exc: 14
inc: 1; exc: 14
inc: 1; exc: 14
inc: 1; exc: 14
--------------------------------------------
Iteration 23:
solving
H = {
legal_jump(V0, V1, V2, V3, V4, V4, V3) :- agent(V0), pos(V1), score(V1), int(V1), pos(V2), score(V2), int(V2), pos(V3), score(V3), int(V3), pos(V4), score(V4), int(V4).
}
