%parsed
Iteration 0:
solving
H = {
}
inc: 0; exc: 0
--------------------------------------------
Iteration 1:
solving
H = {
next_connected(V0, V1, V2) :- col(V0), int(V0), row(V1), col(V2), int(V2).
}
inc: 0; exc: 1
--------------------------------------------
Iteration 2:
solving
H = {
next_connected(V0, V1, V2) :- succ(V2, V32), col(V0), int(V0), row(V1), col(V2), int(V2), col(V32), int(V32).
}
inc: 0; exc: 2
--------------------------------------------
Iteration 3:
solving
H = {
next_connected(V0, V1, V2) :- succ(V0, V53), col(V0), int(V0), row(V1), col(V2), int(V2), col(V53), int(V53).
}
inc: 0; exc: 3
--------------------------------------------
Iteration 4:
solving
H = {
next_connected(V0, V1, V2) :- redbeg(V66, V0), col(V0), int(V0), row(V1), col(V2), int(V2), row(V66).
}
inc: 0; exc: 4
--------------------------------------------
Iteration 5:
solving
H = {
next_connected(V0, V1, V2) :- redbeg(V68, V2), col(V0), int(V0), row(V1), col(V2), int(V2), row(V68).
}
inc: 0; exc: 5
--------------------------------------------
Iteration 6:
solving
H = {
next_connected(V0, V1, V2) :- nextrow(V1, V65), col(V0), int(V0), row(V1), col(V2), int(V2), row(V65).
}
inc: 0; exc: 6
--------------------------------------------
Iteration 7:
solving
H = {
next_connected(V0, V1, V2) :- middle(V1, V21), col(V0), int(V0), row(V1), col(V2), int(V2), col(V21), int(V21).
}
inc: 0; exc: 7
--------------------------------------------
Iteration 8:
solving
H = {
next_connected(V0, V1, V2) :- true_step(V0), col(V0), int(V0), row(V1), col(V2), int(V2).
}
inc: 0; exc: 8
--------------------------------------------
Iteration 9:
solving
H = {
next_connected(V0, V1, V2) :- does_place(V71, V1, V2), col(V0), int(V0), row(V1), col(V2), int(V2), agent(V71).
}
inc: 0; exc: 9
--------------------------------------------
Iteration 10:
solving
H = {
next_connected(V0, V1, V2) :- succ(V2, V32), succ(V0, V53), col(V0), int(V0), row(V1), col(V2), int(V2), col(V32), int(V32), col(V53), int(V53).
}
inc: 0; exc: 10
--------------------------------------------
Iteration 11:
solving
H = {
next_connected(V0, V1, V2) :- succ(V2, V32), redbeg(V66, V0), col(V0), int(V0), row(V1), col(V2), int(V2), col(V32), int(V32), row(V66).
}
inc: 0; exc: 11
--------------------------------------------
Iteration 12:
solving
H = {
next_connected(V0, V1, V2) :- succ(V2, V32), true_step(V0), col(V0), int(V0), row(V1), col(V2), int(V2), col(V32), int(V32).
}
inc: 0; exc: 12
--------------------------------------------
Iteration 13:
solving
H = {
next_connected(V0, V1, V2) :- succ(V53, V2), succ(V0, V53), col(V0), int(V0), row(V1), col(V2), int(V2), col(V53), int(V53).
}
inc: 0; exc: 13
--------------------------------------------
Iteration 14:
solving
H = {
next_connected(V0, V1, V2) :- succ(V0, V53), redbeg(V68, V2), col(V0), int(V0), row(V1), col(V2), int(V2), col(V53), int(V53), row(V68).
}
inc: 0; exc: 14
--------------------------------------------
Iteration 15:
solving
H = {
next_connected(V0, V1, V2) :- succ(V0, V53), nextrow(V1, V65), col(V0), int(V0), row(V1), col(V2), int(V2), col(V53), int(V53), row(V65).
}
inc: 0; exc: 15
--------------------------------------------
Iteration 16:
solving
H = {
next_connected(V0, V1, V2) :- succ(V0, V53), middle(V1, V21), col(V0), int(V0), row(V1), col(V2), int(V2), col(V21), int(V21), col(V53), int(V53).
}
inc: 0; exc: 16
--------------------------------------------
Iteration 17:
solving
H = {
next_connected(V0, V1, V2) :- succ(V0, V53), does_place(V71, V1, V2), col(V0), int(V0), row(V1), col(V2), int(V2), col(V53), int(V53), agent(V71).
}
inc: 0; exc: 17
--------------------------------------------
Iteration 18:
solving
H = {
next_connected(V0, V1, V2) :- redbeg(V66, V0), redbeg(V68, V2), col(V0), int(V0), row(V1), col(V2), int(V2), row(V66), row(V68).
}
inc: 0; exc: 18
--------------------------------------------
Iteration 19:
solving
H = {
next_connected(V0, V1, V2) :- redbeg(V66, V0), nextrow(V1, V65), col(V0), int(V0), row(V1), col(V2), int(V2), row(V65), row(V66).
}
inc: 0; exc: 19
--------------------------------------------
Iteration 20:
solving
H = {
next_connected(V0, V1, V2) :- redbeg(V66, V0), nextrow(V66, V1), col(V0), int(V0), row(V1), col(V2), int(V2), row(V66).
}
inc: 0; exc: 20
--------------------------------------------
Iteration 21:
solving
H = {
next_connected(V0, V1, V2) :- redbeg(V66, V0), middle(V1, V21), col(V0), int(V0), row(V1), col(V2), int(V2), col(V21), int(V21), row(V66).
}
inc: 0; exc: 21
--------------------------------------------
Iteration 22:
solving
H = {
next_connected(V0, V1, V2) :- redbeg(V66, V0), does_place(V71, V1, V2), col(V0), int(V0), row(V1), col(V2), int(V2), row(V66), agent(V71).
}
inc: 0; exc: 22
--------------------------------------------
Iteration 23:
solving
H = {
next_connected(V0, V1, V2) :- redbeg(V68, V2), imaginary(V68, V0), col(V0), int(V0), row(V1), col(V2), int(V2), row(V68).
}
inc: 0; exc: 23
--------------------------------------------
Iteration 24:
solving
H = {
next_connected(V0, V1, V2) :- redbeg(V68, V2), true_step(V0), col(V0), int(V0), row(V1), col(V2), int(V2), row(V68).
}
inc: 0; exc: 24
--------------------------------------------
Iteration 25:
solving
H = {
next_connected(V0, V1, V2) :- nextrow(V1, V65), true_step(V0), col(V0), int(V0), row(V1), col(V2), int(V2), row(V65).
}
inc: 0; exc: 25
