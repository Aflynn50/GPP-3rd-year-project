%parsed
Iteration 0:
solving
H = {
}
inc: 0; exc: 0
--------------------------------------------
Iteration 1:
solving
H = {
next_score(V0, V1) :- agent(V0), int(V1).
}
inc: 0; exc: 1
--------------------------------------------
Iteration 2:
solving
H = {
next_score(V0, V1) :- succ(V1, V82), agent(V0), int(V1), pos(V82), int(V82).
}
inc: 0; exc: 2
--------------------------------------------
Iteration 3:
solving
H = {
next_score(V0, V1) :- point_succ_two(V1, V3), agent(V0), int(V1), int(V3).
}
inc: 0; exc: 3
--------------------------------------------
Iteration 4:
solving
H = {
next_score(V0, V1) :- true_step(V1), agent(V0), int(V1).
}
inc: 1; exc: 3
--------------------------------------------
Iteration 5:
solving
H = {
next_score(V0, V1) :- true_score(V0, V1), agent(V0), int(V1).
}
inc: 2; exc: 3
--------------------------------------------
Iteration 6:
solving
H = {
next_score(V0, V1) :- succ(V1, V80), point_succ_two(V1, V70), agent(V0), int(V1), int(V70), int(V80).
V4), world_max(V0), true_time(V4), int(V0), int(V4).
next_score(V0) :- succ(V7, V5), true_time(V7), not bounds(V7), V0 = 4, int(V0), int(V5), int(V7).
}
next_score(V0, V1) :- succ(V1, V80), point_succ_two(V1, V70), agent(V0), int(V1), int(V70), int(V80).
V4), world_max(V0), true_time(V4), int(V0), int(V4).
next_score(V0) :- succ(V7, V5), true_time(V7), not bounds(V7), V0 = 4, int(V0), int(V5), int(V7).

succ(9, 10).
succ(80, 81).
succ(8, 9).
succ(79, 80).
succ(78, 79).
succ(77, 78).
succ(76, 77).
succ(75, 76).
succ(74, 75).
succ(73, 74).
succ(72, 73).
succ(71, 72).
succ(70, 71).
succ(7, 8).
succ(69, 70).
succ(68, 69).
succ(67, 68).
succ(66, 67).
succ(65, 66).
succ(64, 65).
succ(63, 64).
succ(62, 63).
succ(61, 62).
succ(60, 61).
succ(6, 7).
succ(59, 60).
succ(58, 59).
succ(57, 58).
succ(56, 57).
succ(55, 56).
succ(54, 55).
succ(53, 54).
succ(52, 53).
succ(51, 52).
succ(50, 51).
succ(5, 6).
succ(49, 50).
succ(48, 49).
succ(47, 48).
succ(46, 47).
succ(45, 46).
succ(44, 45).
succ(43, 44).
succ(42, 43).
succ(41, 42).
succ(40, 41).
succ(4, 5).
succ(39, 40).
succ(38, 39).
succ(37, 38).
succ(36, 37).
succ(35, 36).
succ(34, 35).
succ(33, 34).
succ(32, 33).
succ(31, 32).
succ(30, 31).
succ(3, 4).
succ(29, 30).
succ(28, 29).
succ(27, 28).
succ(26, 27).
succ(25, 26).
succ(24, 25).
succ(23, 24).
succ(22, 23).
succ(21, 22).
succ(20, 21).
succ(2, 3).
succ(19, 20).
succ(18, 19).
succ(17, 18).
succ(16, 17).
succ(15, 16).
succ(14, 15).
succ(13, 14).
succ(12, 13).
succ(11, 12).
succ(10, 11).
succ(1, 2).
succ(0, 1).
season_list(winter).
season_list(summer).
season_list(spring).
season_list(fall).
role(red).
role(blue).
point_succ_two(90, 100).
point_succ_two(80, 90).
point_succ_two(70, 80).
point_succ_two(60, 70).
point_succ_two(50, 60).
point_succ_two(40, 50).
point_succ_two(30, 40).
point_succ_two(20, 30).
point_succ_two(10, 20).
point_succ_two(0, 10).
input_water_row(red, 4).
input_water_row(red, 3).
input_water_row(red, 2).
input_water_row(red, 1).
input_water_row(blue, 4).
input_water_row(blue, 3).
input_water_row(blue, 2).
input_water_row(blue, 1).
input_water_col(red, 4).
input_water_col(red, 3).
input_water_col(red, 2).
input_water_col(red, 1).
input_water_col(blue, 4).
input_water_col(blue, 3).
input_water_col(blue, 2).
input_water_col(blue, 1).
input_sow_row(red, 4).
input_sow_row(red, 3).
input_sow_row(red, 2).
input_sow_row(red, 1).
input_sow_row(blue, 4).
input_sow_row(blue, 3).
input_sow_row(blue, 2).
input_sow_row(blue, 1).
input_sow_col(red, 4).
input_sow_col(red, 3).
input_sow_col(red, 2).
input_sow_col(red, 1).
input_sow_col(blue, 4).
input_sow_col(blue, 3).
input_sow_col(blue, 2).
input_sow_col(blue, 1).
input_plow_row(red, 4).
input_plow_row(red, 3).
input_plow_row(red, 2).
input_plow_row(red, 1).
input_plow_row(blue, 4).
input_plow_row(blue, 3).
input_plow_row(blue, 2).
input_plow_row(blue, 1).
input_plow_col(red, 4).
input_plow_col(red, 3).
input_plow_col(red, 2).
input_plow_col(red, 1).
input_plow_col(blue, 4).
input_plow_col(blue, 3).
input_plow_col(blue, 2).
input_plow_col(blue, 1).
input_harvest_row(red, 4).
input_harvest_row(red, 3).
input_harvest_row(red, 2).
input_harvest_row(red, 1).
input_harvest_row(blue, 4).
input_harvest_row(blue, 3).
input_harvest_row(blue, 2).
input_harvest_row(blue, 1).
input_harvest_col(red, 4).
input_harvest_col(red, 3).
input_harvest_col(red, 2).
input_harvest_col(red, 1).
input_harvest_col(blue, 4).
input_harvest_col(blue, 3).
input_harvest_col(blue, 2).
input_harvest_col(blue, 1).
input_arson_row(red, 4).
input_arson_row(red, 3).
input_arson_row(red, 2).
input_arson_row(red, 1).
input_arson_row(blue, 4).
input_arson_row(blue, 3).
input_arson_row(blue, 2).
input_arson_row(blue, 1).
input_arson_col(red, 4).
input_arson_col(red, 3).
input_arson_col(red, 2).
input_arson_col(red, 1).
input_arson_col(blue, 4).
input_arson_col(blue, 3).
input_arson_col(blue, 2).
input_arson_col(blue, 1).
input(red, noop).
input(blue, noop).
index(4).
index(3).
index(2).
index(1).
get_arson(70).
get_arson(64).
get_arson(48).
get_arson(32).
get_arson(16).
game_end(80).


























































type(agent, red).
agent(red).

type(agent, blue).
agent(blue).

type(pos, 1).
pos(1).

type(pos, 2).
pos(2).

type(pos, 3).
pos(3).

type(pos, 4).
pos(4).

type(int, 0).
int(0).

type(int, 5).
int(5).

type(int, 6).
int(6).

type(int, 7).
int(7).

type(int, 8).
int(8).

type(int, 9).
int(9).

type(int, 10).
int(10).

type(int, 11).
int(11).

type(int, 12).
int(12).

type(int, 13).
int(13).

type(int, 14).
int(14).

type(int, 15).
int(15).

type(int, 16).
int(16).

type(int, 17).
int(17).

type(int, 18).
int(18).

type(int, 19).
int(19).

type(int, 20).
int(20).

type(int, 21).
int(21).

type(int, 22).
int(22).

type(int, 23).
int(23).

type(int, 24).
int(24).

type(int, 25).
int(25).

type(int, 26).
int(26).

type(int, 27).
int(27).

type(int, 28).
int(28).

type(int, 29).
int(29).

type(int, 30).
int(30).

type(int, 31).
int(31).

type(int, 32).
int(32).

type(int, 33).
int(33).

type(int, 34).
int(34).

type(int, 35).
int(35).

type(int, 36).
int(36).

type(int, 37).
int(37).

type(int, 38).
int(38).

type(int, 39).
int(39).

type(int, 40).
int(40).

type(int, 41).
int(41).

type(int, 42).
int(42).

type(int, 43).
int(43).

type(int, 44).
int(44).

type(int, 45).
int(45).

type(int, 46).
int(46).

type(int, 47).
int(47).

type(int, 48).
int(48).

type(int, 49).
int(49).

type(int, 50).
int(50).

type(int, 51).
int(51).

type(int, 52).
int(52).

type(int, 53).
int(53).

type(int, 54).
int(54).

type(int, 55).
int(55).

type(int, 56).
int(56).

type(int, 57).
int(57).

type(int, 58).
int(58).

type(int, 59).
int(59).

type(int, 60).
int(60).

type(int, 61).
int(61).

type(int, 62).
int(62).

type(int, 63).
int(63).

type(int, 64).
int(64).

type(int, 65).
int(65).

type(int, 66).
int(66).

type(int, 67).
int(67).

type(int, 68).
int(68).

type(int, 69).
int(69).

type(int, 70).
int(70).

type(int, 71).
int(71).

type(int, 72).
int(72).

type(int, 73).
int(73).

type(int, 74).
int(74).

type(int, 75).
int(75).

type(int, 76).
int(76).

type(int, 77).
int(77).

type(int, 78).
int(78).

type(int, 79).
int(79).

type(int, 80).
int(80).

type(int, 81).
int(81).

type(int, 82).
int(82).

type(int, 83).
int(83).

type(int, 84).
int(84).

type(int, 85).
int(85).

type(int, 86).
int(86).

type(int, 87).
int(87).

type(int, 88).
int(88).

type(int, 89).
int(89).

type(int, 90).
int(90).

type(int, 91).
int(91).

type(int, 92).
int(92).

type(int, 93).
int(93).

type(int, 94).
int(94).

type(int, 95).
int(95).

type(int, 96).
int(96).

type(int, 97).
int(97).

type(int, 98).
int(98).

type(int, 99).
int(99).

type(int, 100).
int(100).






type(season_type, summer).
season_type(summer).

type(season_type, fall).
season_type(fall).

type(season_type, winter).
season_type(winter).

type(season_type, spring).
season_type(spring).

type(action, noop).
action(noop).

type(int, 1).
int(1).

type(int, 2).
int(2).

type(int, 3).
int(3).

type(int, 4).
int(4).

true_year_second_player(blue).
true_year_first_player(red).
true_step(0).
true_season(winter).
true_score(red, 0).
true_score(blue, 0).
true_control(red).
does_plow_row(red, 2).
does(blue, noop).
inc(0) :- not next_score(red, 0).
inc(1) :- not next_score(blue, 0).
exc(0) :- next_score(red, 99).
exc(1) :- next_score(red, 98).
exc(2) :- next_score(red, 97).
exc(3) :- next_score(red, 96).
exc(4) :- next_score(red, 95).
exc(5) :- next_score(red, 94).
exc(6) :- next_score(red, 93).
exc(7) :- next_score(red, 92).
exc(8) :- next_score(red, 91).
exc(9) :- next_score(red, 90).
exc(10) :- next_score(red, 9).
exc(11) :- next_score(red, 89).
exc(12) :- next_score(red, 88).
exc(13) :- next_score(red, 87).
exc(14) :- next_score(red, 86).
exc(15) :- next_score(red, 85).
exc(16) :- next_score(red, 84).
exc(17) :- next_score(red, 83).
exc(18) :- next_score(red, 82).
exc(19) :- next_score(red, 81).
exc(20) :- next_score(red, 80).
exc(21) :- next_score(red, 8).
exc(22) :- next_score(red, 79).
exc(23) :- next_score(red, 78).
exc(24) :- next_score(red, 77).
exc(25) :- next_score(red, 76).
exc(26) :- next_score(red, 75).
exc(27) :- next_score(red, 74).
exc(28) :- next_score(red, 73).
exc(29) :- next_score(red, 72).
exc(30) :- next_score(red, 71).
exc(31) :- next_score(red, 70).
exc(32) :- next_score(red, 7).
exc(33) :- next_score(red, 69).
exc(34) :- next_score(red, 68).
exc(35) :- next_score(red, 67).
exc(36) :- next_score(red, 66).
exc(37) :- next_score(red, 65).
exc(38) :- next_score(red, 64).
exc(39) :- next_score(red, 63).
exc(40) :- next_score(red, 62).
exc(41) :- next_score(red, 61).
exc(42) :- next_score(red, 60).
exc(43) :- next_score(red, 6).
exc(44) :- next_score(red, 59).
exc(45) :- next_score(red, 58).
exc(46) :- next_score(red, 57).
exc(47) :- next_score(red, 56).
exc(48) :- next_score(red, 55).
exc(49) :- next_score(red, 54).
exc(50) :- next_score(red, 53).
exc(51) :- next_score(red, 52).
exc(52) :- next_score(red, 51).
exc(53) :- next_score(red, 50).
exc(54) :- next_score(red, 5).
exc(55) :- next_score(red, 49).
exc(56) :- next_score(red, 48).
exc(57) :- next_score(red, 47).
exc(58) :- next_score(red, 46).
exc(59) :- next_score(red, 45).
exc(60) :- next_score(red, 44).
exc(61) :- next_score(red, 43).
exc(62) :- next_score(red, 42).
exc(63) :- next_score(red, 41).
exc(64) :- next_score(red, 40).
exc(65) :- next_score(red, 4).
exc(66) :- next_score(red, 39).
exc(67) :- next_score(red, 38).
exc(68) :- next_score(red, 37).
exc(69) :- next_score(red, 36).
exc(70) :- next_score(red, 35).
exc(71) :- next_score(red, 34).
exc(72) :- next_score(red, 33).
exc(73) :- next_score(red, 32).
exc(74) :- next_score(red, 31).
exc(75) :- next_score(red, 30).
exc(76) :- next_score(red, 3).
exc(77) :- next_score(red, 29).
exc(78) :- next_score(red, 28).
exc(79) :- next_score(red, 27).
exc(80) :- next_score(red, 26).
exc(81) :- next_score(red, 25).
exc(82) :- next_score(red, 24).
exc(83) :- next_score(red, 23).
exc(84) :- next_score(red, 22).
exc(85) :- next_score(red, 21).
exc(86) :- next_score(red, 20).
exc(87) :- next_score(red, 2).
exc(88) :- next_score(red, 19).
exc(89) :- next_score(red, 18).
exc(90) :- next_score(red, 17).
exc(91) :- next_score(red, 16).
exc(92) :- next_score(red, 15).
exc(93) :- next_score(red, 14).
exc(94) :- next_score(red, 13).
exc(95) :- next_score(red, 12).
exc(96) :- next_score(red, 11).
exc(97) :- next_score(red, 100).
exc(98) :- next_score(red, 10).
exc(99) :- next_score(red, 1).
exc(100) :- next_score(blue, 99).
exc(101) :- next_score(blue, 98).
exc(102) :- next_score(blue, 97).
exc(103) :- next_score(blue, 96).
exc(104) :- next_score(blue, 95).
exc(105) :- next_score(blue, 94).
exc(106) :- next_score(blue, 93).
exc(107) :- next_score(blue, 92).
exc(108) :- next_score(blue, 91).
exc(109) :- next_score(blue, 90).
exc(110) :- next_score(blue, 9).
exc(111) :- next_score(blue, 89).
exc(112) :- next_score(blue, 88).
exc(113) :- next_score(blue, 87).
exc(114) :- next_score(blue, 86).
exc(115) :- next_score(blue, 85).
exc(116) :- next_score(blue, 84).
exc(117) :- next_score(blue, 83).
exc(118) :- next_score(blue, 82).
exc(119) :- next_score(blue, 81).
exc(120) :- next_score(blue, 80).
exc(121) :- next_score(blue, 8).
exc(122) :- next_score(blue, 79).
exc(123) :- next_score(blue, 78).
exc(124) :- next_score(blue, 77).
exc(125) :- next_score(blue, 76).
exc(126) :- next_score(blue, 75).
exc(127) :- next_score(blue, 74).
exc(128) :- next_score(blue, 73).
exc(129) :- next_score(blue, 72).
exc(130) :- next_score(blue, 71).
exc(131) :- next_score(blue, 70).
exc(132) :- next_score(blue, 7).
exc(133) :- next_score(blue, 69).
exc(134) :- next_score(blue, 68).
exc(135) :- next_score(blue, 67).
exc(136) :- next_score(blue, 66).
exc(137) :- next_score(blue, 65).
exc(138) :- next_score(blue, 64).
exc(139) :- next_score(blue, 63).
exc(140) :- next_score(blue, 62).
exc(141) :- next_score(blue, 61).
exc(142) :- next_score(blue, 60).
exc(143) :- next_score(blue, 6).
exc(144) :- next_score(blue, 59).
exc(145) :- next_score(blue, 58).
exc(146) :- next_score(blue, 57).
exc(147) :- next_score(blue, 56).
exc(148) :- next_score(blue, 55).
exc(149) :- next_score(blue, 54).
exc(150) :- next_score(blue, 53).
exc(151) :- next_score(blue, 52).
exc(152) :- next_score(blue, 51).
exc(153) :- next_score(blue, 50).
exc(154) :- next_score(blue, 5).
exc(155) :- next_score(blue, 49).
exc(156) :- next_score(blue, 48).
exc(157) :- next_score(blue, 47).
exc(158) :- next_score(blue, 46).
exc(159) :- next_score(blue, 45).
exc(160) :- next_score(blue, 44).
exc(161) :- next_score(blue, 43).
exc(162) :- next_score(blue, 42).
exc(163) :- next_score(blue, 41).
exc(164) :- next_score(blue, 40).
exc(165) :- next_score(blue, 4).
exc(166) :- next_score(blue, 39).
exc(167) :- next_score(blue, 38).
exc(168) :- next_score(blue, 37).
exc(169) :- next_score(blue, 36).
exc(170) :- next_score(blue, 35).
exc(171) :- next_score(blue, 34).
exc(172) :- next_score(blue, 33).
exc(173) :- next_score(blue, 32).
exc(174) :- next_score(blue, 31).
exc(175) :- next_score(blue, 30).
exc(176) :- next_score(blue, 3).
exc(177) :- next_score(blue, 29).
exc(178) :- next_score(blue, 28).
exc(179) :- next_score(blue, 27).
exc(180) :- next_score(blue, 26).
exc(181) :- next_score(blue, 25).
exc(182) :- next_score(blue, 24).
exc(183) :- next_score(blue, 23).
exc(184) :- next_score(blue, 22).
exc(185) :- next_score(blue, 21).
exc(186) :- next_score(blue, 20).
exc(187) :- next_score(blue, 2).
exc(188) :- next_score(blue, 19).
exc(189) :- next_score(blue, 18).
exc(190) :- next_score(blue, 17).
exc(191) :- next_score(blue, 16).
exc(192) :- next_score(blue, 15).
exc(193) :- next_score(blue, 14).
exc(194) :- next_score(blue, 13).
exc(195) :- next_score(blue, 12).
exc(196) :- next_score(blue, 11).
exc(197) :- next_score(blue, 100).
exc(198) :- next_score(blue, 10).
exc(199) :- next_score(blue, 1).
#show inc/1.
#show exc/1.

