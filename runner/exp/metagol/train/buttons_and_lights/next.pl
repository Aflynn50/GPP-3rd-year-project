does_a(1).
does_a(3).
does_a(6).
does_b(2).
does_b(5).
does_c(4).
my_input(1,robot,a).
my_input(1,robot,b).
my_input(1,robot,c).
my_input(2,robot,a).
my_input(2,robot,b).
my_input(2,robot,c).
my_input(3,robot,a).
my_input(3,robot,b).
my_input(3,robot,c).
my_input(4,robot,a).
my_input(4,robot,b).
my_input(4,robot,c).
my_input(5,robot,a).
my_input(5,robot,b).
my_input(5,robot,c).
my_input(6,robot,a).
my_input(6,robot,b).
my_input(6,robot,c).
my_successor(1,1,2).
my_successor(1,2,3).
my_successor(1,3,4).
my_successor(1,4,5).
my_successor(1,5,6).
my_successor(1,6,7).
my_successor(2,1,2).
my_successor(2,2,3).
my_successor(2,3,4).
my_successor(2,4,5).
my_successor(2,5,6).
my_successor(2,6,7).
my_successor(3,1,2).
my_successor(3,2,3).
my_successor(3,3,4).
my_successor(3,4,5).
my_successor(3,5,6).
my_successor(3,6,7).
my_successor(4,1,2).
my_successor(4,2,3).
my_successor(4,3,4).
my_successor(4,4,5).
my_successor(4,5,6).
my_successor(4,6,7).
my_successor(5,1,2).
my_successor(5,2,3).
my_successor(5,3,4).
my_successor(5,4,5).
my_successor(5,5,6).
my_successor(5,6,7).
my_successor(6,1,2).
my_successor(6,2,3).
my_successor(6,3,4).
my_successor(6,4,5).
my_successor(6,5,6).
my_successor(6,6,7).
my_true_(1).
my_true_(2).
my_true_(3).
my_true_q(4).
my_true_r(5).
my_true_r(6).
neg(next(1,1)).
neg(next(1,2)).
neg(next(1,3)).
neg(next(1,4)).
neg(next(1,5)).
neg(next(1,6)).
neg(next(1,7)).
neg(next(1,p)).
neg(next(1,q)).
neg(next(1,r)).
neg(next(2,1)).
neg(next(2,2)).
neg(next(2,3)).
neg(next(2,4)).
neg(next(2,5)).
neg(next(2,6)).
neg(next(2,7)).
neg(next(2,p)).
neg(next(2,q)).
neg(next(2,r)).
neg(next(3,1)).
neg(next(3,2)).
neg(next(3,3)).
neg(next(3,4)).
neg(next(3,5)).
neg(next(3,6)).
neg(next(3,7)).
neg(next(3,p)).
neg(next(3,q)).
neg(next(3,r)).
neg(next(4,1)).
neg(next(4,2)).
neg(next(4,3)).
neg(next(4,4)).
neg(next(4,5)).
neg(next(4,6)).
neg(next(4,7)).
neg(next(4,p)).
neg(next(4,q)).
neg(next(4,r)).
neg(next(5,1)).
neg(next(5,2)).
neg(next(5,3)).
neg(next(5,4)).
neg(next(5,5)).
neg(next(5,6)).
neg(next(5,7)).
neg(next(5,p)).
neg(next(5,q)).
neg(next(5,r)).
neg(next(6,1)).
neg(next(6,2)).
neg(next(6,3)).
neg(next(6,4)).
neg(next(6,5)).
neg(next(6,6)).
neg(next(6,7)).
neg(next(6,p)).
neg(next(6,q)).
neg(next(6,r)).
not_does_a(A) :- \+ does_a(A).
not_does_b(A) :- \+ does_b(A).
not_does_c(A) :- \+ does_c(A).
not_my_input(A,B,C) :- \+ my_input(A,B,C).
not_my_successor(A,B,C) :- \+ my_successor(A,B,C).
not_my_true_(A) :- \+ my_true_(A).
not_my_true_q(A) :- \+ my_true_q(A).
not_my_true_r(A) :- \+ my_true_r(A).
not_role(A,B) :- \+ role(A,B).
pos(next_(1)).
pos(next_(2)).
pos(next_p(6,r)).
pos(next_q(3)).
pos(next_r(4)).
pos(next_r(5)).
prim(does_a/1).
prim(does_b/1).
prim(does_c/1).
prim(my_input/3).
prim(my_successor/3).
prim(my_true_/1).
prim(my_true_q/1).
prim(my_true_r/1).
prim(not_does_a/1).
prim(not_does_b/1).
prim(not_does_c/1).
prim(not_my_input/3).
prim(not_my_successor/3).
prim(not_my_true_/1).
prim(not_my_true_q/1).
prim(not_my_true_r/1).
prim(not_role/2).
prim(role/2).
role(1,robot).
role(2,robot).
role(3,robot).
role(4,robot).
role(5,robot).
role(6,robot).
