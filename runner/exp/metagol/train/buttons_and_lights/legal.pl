my_input(1,robot,a).
my_input(1,robot,b).
my_input(1,robot,c).
my_input(2,robot,a).
my_input(2,robot,b).
my_input(2,robot,c).
my_input(3,robot,a).
my_input(3,robot,b).
my_input(3,robot,c).
my_input(4,robot,a).
my_input(4,robot,b).
my_input(4,robot,c).
my_input(5,robot,a).
my_input(5,robot,b).
my_input(5,robot,c).
my_input(6,robot,a).
my_input(6,robot,b).
my_input(6,robot,c).
my_input(7,robot,a).
my_input(7,robot,b).
my_input(7,robot,c).
my_successor(1,1,2).
my_successor(1,2,3).
my_successor(1,3,4).
my_successor(1,4,5).
my_successor(1,5,6).
my_successor(1,6,7).
my_successor(2,1,2).
my_successor(2,2,3).
my_successor(2,3,4).
my_successor(2,4,5).
my_successor(2,5,6).
my_successor(2,6,7).
my_successor(3,1,2).
my_successor(3,2,3).
my_successor(3,3,4).
my_successor(3,4,5).
my_successor(3,5,6).
my_successor(3,6,7).
my_successor(4,1,2).
my_successor(4,2,3).
my_successor(4,3,4).
my_successor(4,4,5).
my_successor(4,5,6).
my_successor(4,6,7).
my_successor(5,1,2).
my_successor(5,2,3).
my_successor(5,3,4).
my_successor(5,4,5).
my_successor(5,5,6).
my_successor(5,6,7).
my_successor(6,1,2).
my_successor(6,2,3).
my_successor(6,3,4).
my_successor(6,4,5).
my_successor(6,5,6).
my_successor(6,6,7).
my_successor(7,1,2).
my_successor(7,2,3).
my_successor(7,3,4).
my_successor(7,4,5).
my_successor(7,5,6).
my_successor(7,6,7).
my_true_(1).
my_true_(2).
my_true_(3).
my_true_p(7,r).
my_true_q(4).
my_true_r(5).
my_true_r(6).
neg(legal(1,robot,a)).
neg(legal(1,robot,b)).
neg(legal(1,robot,c)).
neg(legal(2,robot,a)).
neg(legal(2,robot,b)).
neg(legal(2,robot,c)).
neg(legal(3,robot,a)).
neg(legal(3,robot,b)).
neg(legal(3,robot,c)).
neg(legal(4,robot,a)).
neg(legal(4,robot,b)).
neg(legal(4,robot,c)).
neg(legal(5,robot,a)).
neg(legal(5,robot,b)).
neg(legal(5,robot,c)).
neg(legal(6,robot,a)).
neg(legal(6,robot,b)).
neg(legal(6,robot,c)).
neg(legal(7,robot,a)).
neg(legal(7,robot,b)).
neg(legal(7,robot,c)).
not_my_input(A,B,C) :- \+ my_input(A,B,C).
not_my_successor(A,B,C) :- \+ my_successor(A,B,C).
not_my_true_(A) :- \+ my_true_(A).
not_my_true_p(A,B) :- \+ my_true_p(A,B).
not_my_true_q(A) :- \+ my_true_q(A).
not_my_true_r(A) :- \+ my_true_r(A).
not_role(A,B) :- \+ role(A,B).
pos(legal_a(1,robot)).
pos(legal_a(2,robot)).
pos(legal_a(3,robot)).
pos(legal_a(4,robot)).
pos(legal_a(5,robot)).
pos(legal_a(6,robot)).
pos(legal_a(7,robot)).
pos(legal_b(1,robot)).
pos(legal_b(2,robot)).
pos(legal_b(3,robot)).
pos(legal_b(4,robot)).
pos(legal_b(5,robot)).
pos(legal_b(6,robot)).
pos(legal_b(7,robot)).
pos(legal_c(1,robot)).
pos(legal_c(2,robot)).
pos(legal_c(3,robot)).
pos(legal_c(4,robot)).
pos(legal_c(5,robot)).
pos(legal_c(6,robot)).
pos(legal_c(7,robot)).
prim(my_input/3).
prim(my_successor/3).
prim(my_true_/1).
prim(my_true_p/2).
prim(my_true_q/1).
prim(my_true_r/1).
prim(not_my_input/3).
prim(not_my_successor/3).
prim(not_my_true_/1).
prim(not_my_true_p/2).
prim(not_my_true_q/1).
prim(not_my_true_r/1).
prim(not_role/2).
prim(role/2).
role(1,robot).
role(2,robot).
role(3,robot).
role(4,robot).
role(5,robot).
role(6,robot).
role(7,robot).
