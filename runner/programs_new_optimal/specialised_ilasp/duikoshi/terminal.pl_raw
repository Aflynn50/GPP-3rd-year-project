%parsed
Iteration 0:
solving
H = {
}
inc: 0; exc: 0
--------------------------------------------
Iteration 1:
solving
H = {
terminal.
}
inc: 0; exc: 1
--------------------------------------------
Iteration 2:
solving
H = {
terminal :- true_cell(V2, V2, V3), pos(V2), cell_type(V2), pos(V3), cell_type(V3).
}
inc: 0; exc: 2
--------------------------------------------
Iteration 3:
solving
H = {
terminal :- true_cell(V2, V3, V2), pos(V2), cell_type(V2), pos(V3), cell_type(V3).
}
inc: 0; exc: 3
--------------------------------------------
Iteration 4:
solving
H = {
terminal :- true_cell(V2, V2, V3), true_cell(V2, V5, V5), pos(V2), cell_type(V2), pos(V3), cell_type(V3), pos(V5), cell_type(V5).
}
inc: 0; exc: 4
--------------------------------------------
Iteration 5:
solving
H = {
terminal :- true_cell(V2, V2, V3), true_cell(V3, V3, V4), pos(V2), cell_type(V2), pos(V3), cell_type(V3), pos(V4), cell_type(V4).
}
inc: 0; exc: 5
--------------------------------------------
Iteration 6:
solving
H = {
terminal :- true_cell(V2, V2, V3), V2 = 4, pos(V2), cell_type(V2), pos(V3), cell_type(V3).
}
inc: 0; exc: 6
--------------------------------------------
Iteration 7:
solving
H = {
terminal :- true_cell(V3, V3, V4), V4 = 2, pos(V3), cell_type(V3), pos(V4), cell_type(V4).
}
inc: 0; exc: 7
--------------------------------------------
Iteration 8:
solving
H = {
terminal :- true_cell(V2, V2, V3), true_cell(V2, V3, V2), V2 = 4, pos(V2), cell_type(V2), pos(V3), cell_type(V3).
}
inc: 1; exc: 7
--------------------------------------------
Iteration 9:
solving
H = {
terminal :- true_cell(V5, V2, V5), true_cell(V5, V4, V2), V5 = 1, pos(V2), cell_type(V2), pos(V4), cell_type(V4), pos(V5), cell_type(V5).
}
inc: 0; exc: 8
inc: 1; exc: 8
--------------------------------------------
Iteration 10:
solving
H = {
terminal :- true_control(V0), true_cell(V2, V2, V3), V0 = red, V2 = 4, agent(V0), pos(V2), cell_type(V2), pos(V3), cell_type(V3).
}
inc: 2; exc: 8
--------------------------------------------
Iteration 11:
solving
H = {
terminal :- true_cell(V2, V4, V5), true_cell(V4, V3, V5), true_cell(V4, V5, V4), V2 = 4, pos(V2), cell_type(V2), pos(V3), cell_type(V3), pos(V4), cell_type(V4), pos(V5), cell_type(V5).
}
inc: 0; exc: 9
inc: 1; exc: 9
inc: 2; exc: 9
--------------------------------------------
Iteration 12:
solving
H = {
terminal :- true_control(V0), true_cell(V4, V3, V5), true_cell(V5, V5, V3), V0 = red, V5 = 1, agent(V0), pos(V3), cell_type(V3), pos(V4), cell_type(V4), pos(V5), cell_type(V5).
}
inc: 3; exc: 9
--------------------------------------------
Iteration 13:
solving
H = {
terminal :- true_cell(V3, V3, V2), V2 = 4, pos(V2), cell_type(V2), pos(V3), cell_type(V3).
terminal :- true_control(V0), true_cell(V2, V2, V5), V0 = red, V2 = 4, agent(V0), pos(V2), cell_type(V2), pos(V5), cell_type(V5).
}
inc: 0; exc: 10
inc: 1; exc: 10
inc: 2; exc: 10
inc: 3; exc: 10
--------------------------------------------
Iteration 14:
solving
H = {
terminal :- true_control(V0), true_cell(V2, V2, V3), V0 = red, V2 = 4, agent(V0), pos(V2), cell_type(V2), pos(V3), cell_type(V3).
terminal :- true_control(V0), true_cell(V4, V3, V5), true_cell(V5, V5, V3), V0 = red, V5 = 1, agent(V0), pos(V3), cell_type(V3), pos(V4), cell_type(V4), pos(V5), cell_type(V5).
}
inc: 0; exc: 11
inc: 1; exc: 11
inc: 2; exc: 11
inc: 3; exc: 11
--------------------------------------------
Iteration 15:
solving
H = {
terminal :- true_control(V0), true_cell(V2, V2, V3), V0 = red, V2 = 4, agent(V0), pos(V2), cell_type(V2), pos(V3), cell_type(V3).
terminal :- true_cell(V2, V3, V4), true_cell(V2, V4, V5), true_cell(V5, V5, V3), V4 = 2, pos(V2), cell_type(V2), pos(V3), cell_type(V3), pos(V4), cell_type(V4), pos(V5), cell_type(V5).
}
inc: 0; exc: 12
inc: 1; exc: 12
inc: 2; exc: 12
inc: 3; exc: 12
--------------------------------------------
Iteration 16:
solving
H = {
terminal.
 true_cell(V2, V3, V4), true_cell(V2, V4, V5), true_cell(V5, V5, V3), V4 = 2, pos(V2), cell_type(V2), pos(V3), cell_type(V3), pos(V4), cell_type(V4), pos(V5), cell_type(V5).
terminal :- true_cell(V2, V2, V5), true_cell(V2, V5, V2), V2 = 4, pos(V2), cell_type(V2), pos(V5), cell_type(V5).
}
terminal.
 true_cell(V2, V3, V4), true_cell(V2, V4, V5), true_cell(V5, V5, V3), V4 = 2, pos(V2), cell_type(V2), pos(V3), cell_type(V3), pos(V4), cell_type(V4), pos(V5), cell_type(V5).
terminal :- true_cell(V2, V2, V5), true_cell(V2, V5, V2), V2 = 4, pos(V2), cell_type(V2), pos(V5), cell_type(V5).

role(red).
role(green).
input_mark(red, 4, 4, 4).
input_mark(red, 4, 4, 3).
input_mark(red, 4, 4, 2).
input_mark(red, 4, 4, 1).
input_mark(red, 4, 3, 4).
input_mark(red, 4, 3, 3).
input_mark(red, 4, 3, 2).
input_mark(red, 4, 3, 1).
input_mark(red, 4, 2, 4).
input_mark(red, 4, 2, 3).
input_mark(red, 4, 2, 2).
input_mark(red, 4, 2, 1).
input_mark(red, 4, 1, 4).
input_mark(red, 4, 1, 3).
input_mark(red, 4, 1, 2).
input_mark(red, 4, 1, 1).
input_mark(red, 3, 4, 4).
input_mark(red, 3, 4, 3).
input_mark(red, 3, 4, 2).
input_mark(red, 3, 4, 1).
input_mark(red, 3, 3, 4).
input_mark(red, 3, 3, 3).
input_mark(red, 3, 3, 2).
input_mark(red, 3, 3, 1).
input_mark(red, 3, 2, 4).
input_mark(red, 3, 2, 3).
input_mark(red, 3, 2, 2).
input_mark(red, 3, 2, 1).
input_mark(red, 3, 1, 4).
input_mark(red, 3, 1, 3).
input_mark(red, 3, 1, 2).
input_mark(red, 3, 1, 1).
input_mark(red, 2, 4, 4).
input_mark(red, 2, 4, 3).
input_mark(red, 2, 4, 2).
input_mark(red, 2, 4, 1).
input_mark(red, 2, 3, 4).
input_mark(red, 2, 3, 3).
input_mark(red, 2, 3, 2).
input_mark(red, 2, 3, 1).
input_mark(red, 2, 2, 4).
input_mark(red, 2, 2, 3).
input_mark(red, 2, 2, 2).
input_mark(red, 2, 2, 1).
input_mark(red, 2, 1, 4).
input_mark(red, 2, 1, 3).
input_mark(red, 2, 1, 2).
input_mark(red, 2, 1, 1).
input_mark(red, 1, 4, 4).
input_mark(red, 1, 4, 3).
input_mark(red, 1, 4, 2).
input_mark(red, 1, 4, 1).
input_mark(red, 1, 3, 4).
input_mark(red, 1, 3, 3).
input_mark(red, 1, 3, 2).
input_mark(red, 1, 3, 1).
input_mark(red, 1, 2, 4).
input_mark(red, 1, 2, 3).
input_mark(red, 1, 2, 2).
input_mark(red, 1, 2, 1).
input_mark(red, 1, 1, 4).
input_mark(red, 1, 1, 3).
input_mark(red, 1, 1, 2).
input_mark(red, 1, 1, 1).
input_mark(green, 4, 4, 4).
input_mark(green, 4, 4, 3).
input_mark(green, 4, 4, 2).
input_mark(green, 4, 4, 1).
input_mark(green, 4, 3, 4).
input_mark(green, 4, 3, 3).
input_mark(green, 4, 3, 2).
input_mark(green, 4, 3, 1).
input_mark(green, 4, 2, 4).
input_mark(green, 4, 2, 3).
input_mark(green, 4, 2, 2).
input_mark(green, 4, 2, 1).
input_mark(green, 4, 1, 4).
input_mark(green, 4, 1, 3).
input_mark(green, 4, 1, 2).
input_mark(green, 4, 1, 1).
input_mark(green, 3, 4, 4).
input_mark(green, 3, 4, 3).
input_mark(green, 3, 4, 2).
input_mark(green, 3, 4, 1).
input_mark(green, 3, 3, 4).
input_mark(green, 3, 3, 3).
input_mark(green, 3, 3, 2).
input_mark(green, 3, 3, 1).
input_mark(green, 3, 2, 4).
input_mark(green, 3, 2, 3).
input_mark(green, 3, 2, 2).
input_mark(green, 3, 2, 1).
input_mark(green, 3, 1, 4).
input_mark(green, 3, 1, 3).
input_mark(green, 3, 1, 2).
input_mark(green, 3, 1, 1).
input_mark(green, 2, 4, 4).
input_mark(green, 2, 4, 3).
input_mark(green, 2, 4, 2).
input_mark(green, 2, 4, 1).
input_mark(green, 2, 3, 4).
input_mark(green, 2, 3, 3).
input_mark(green, 2, 3, 2).
input_mark(green, 2, 3, 1).
input_mark(green, 2, 2, 4).
input_mark(green, 2, 2, 3).
input_mark(green, 2, 2, 2).
input_mark(green, 2, 2, 1).
input_mark(green, 2, 1, 4).
input_mark(green, 2, 1, 3).
input_mark(green, 2, 1, 2).
input_mark(green, 2, 1, 1).
input_mark(green, 1, 4, 4).
input_mark(green, 1, 4, 3).
input_mark(green, 1, 4, 2).
input_mark(green, 1, 4, 1).
input_mark(green, 1, 3, 4).
input_mark(green, 1, 3, 3).
input_mark(green, 1, 3, 2).
input_mark(green, 1, 3, 1).
input_mark(green, 1, 2, 4).
input_mark(green, 1, 2, 3).
input_mark(green, 1, 2, 2).
input_mark(green, 1, 2, 1).
input_mark(green, 1, 1, 4).
input_mark(green, 1, 1, 3).
input_mark(green, 1, 1, 2).
input_mark(green, 1, 1, 1).
input(red, noop).
input(green, noop).
index(4).
index(3).
index(2).
index(1).
filler(b).
filler(4).
filler(3).
filler(2).
filler(1).













type(agent, red).
agent(red).

type(agent, green).
agent(green).

type(score, 0).
score(0).

type(score, 50).
score(50).

type(score, 100).
score(100).

type(pos, 1).
pos(1).

type(pos, 2).
pos(2).

type(pos, 3).
pos(3).

type(pos, 4).
pos(4).

type(cell_type, b).
cell_type(b).

type(action, noop).
action(noop).



type(cell_type, 1).
cell_type(1).

type(cell_type, 2).
cell_type(2).

type(cell_type, 3).
cell_type(3).

type(cell_type, 4).
cell_type(4).

true_control(red).
true_cell(4, 4, b).
true_cell(4, 3, b).
true_cell(4, 2, b).
true_cell(4, 1, b).
true_cell(3, 4, b).
true_cell(3, 3, b).
true_cell(3, 2, b).
true_cell(3, 1, b).
true_cell(2, 4, b).
true_cell(2, 3, b).
true_cell(2, 2, b).
true_cell(2, 1, b).
true_cell(1, 4, b).
true_cell(1, 3, b).
true_cell(1, 2, b).
true_cell(1, 1, b).
exc(0) :- terminal.
#show inc/1.
#show exc/1.

