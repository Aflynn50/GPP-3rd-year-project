%parsed
Iteration 0:
solving
H = {
}
inc: 0; exc: 0
--------------------------------------------
Iteration 1:
solving
H = {
next_cell(V0, V0, V1) :- pos(V0), int(V0), mark(V1).
ark(V1).
next_cell(V0, V1, V2) :- true_cell(V1, V4, V1), pos(V0), mark(V0), pos(V1), mark(V1), mark(V2), pos(V4), mark(V4).
}
next_cell(V0, V0, V1) :- pos(V0), int(V0), mark(V1).
ark(V1).
next_cell(V0, V1, V2) :- true_cell(V1, V4, V1), pos(V0), mark(V0), pos(V1), mark(V1), mark(V2), pos(V4), mark(V4).

vertical(4, 3, 4, 4).
vertical(4, 2, 4, 3).
vertical(4, 1, 4, 2).
vertical(3, 3, 3, 4).
vertical(3, 2, 3, 3).
vertical(3, 1, 3, 2).
vertical(2, 3, 2, 4).
vertical(2, 2, 2, 3).
vertical(2, 1, 2, 2).
vertical(1, 3, 1, 4).
vertical(1, 2, 1, 3).
vertical(1, 1, 1, 2).
triplet(4, 4, 4, 3, 4, 2).
triplet(4, 4, 3, 4, 2, 4).
triplet(4, 3, 4, 2, 4, 1).
triplet(4, 3, 3, 3, 2, 3).
triplet(4, 2, 4, 3, 4, 4).
triplet(4, 2, 3, 2, 2, 2).
triplet(4, 1, 4, 2, 4, 3).
triplet(4, 1, 3, 1, 2, 1).
triplet(3, 4, 3, 3, 3, 2).
triplet(3, 4, 2, 4, 1, 4).
triplet(3, 3, 3, 2, 3, 1).
triplet(3, 3, 2, 3, 1, 3).
triplet(3, 2, 3, 3, 3, 4).
triplet(3, 2, 2, 2, 1, 2).
triplet(3, 1, 3, 2, 3, 3).
triplet(3, 1, 2, 1, 1, 1).
triplet(2, 4, 3, 4, 4, 4).
triplet(2, 4, 2, 3, 2, 2).
triplet(2, 3, 3, 3, 4, 3).
triplet(2, 3, 2, 2, 2, 1).
triplet(2, 2, 3, 2, 4, 2).
triplet(2, 2, 2, 3, 2, 4).
triplet(2, 1, 3, 1, 4, 1).
triplet(2, 1, 2, 2, 2, 3).
triplet(1, 4, 2, 4, 3, 4).
triplet(1, 4, 1, 3, 1, 2).
triplet(1, 3, 2, 3, 3, 3).
triplet(1, 3, 1, 2, 1, 1).
triplet(1, 2, 2, 2, 3, 2).
triplet(1, 2, 1, 3, 1, 4).
triplet(1, 1, 2, 1, 3, 1).
triplet(1, 1, 1, 2, 1, 3).
succ(9, 10).
succ(8, 9).
succ(7, 8).
succ(6, 7).
succ(5, 6).
succ(4, 5).
succ(3, 4).
succ(29, 30).
succ(28, 29).
succ(27, 28).
succ(26, 27).
succ(25, 26).
succ(24, 25).
succ(23, 24).
succ(22, 23).
succ(21, 22).
succ(20, 21).
succ(2, 3).
succ(19, 20).
succ(18, 19).
succ(17, 18).
succ(16, 17).
succ(15, 16).
succ(14, 15).
succ(13, 14).
succ(12, 13).
succ(11, 12).
succ(10, 11).
succ(1, 2).
role(red).
role(black).
nextspot(3, 4).
nextspot(2, 3).
nextspot(1, 2).
mark(red).
mark(blank).
mark(black).
input_move(red, 4, 4, 4, 3).
input_move(red, 4, 4, 3, 4).
input_move(red, 4, 3, 4, 4).
input_move(red, 4, 3, 4, 2).
input_move(red, 4, 3, 3, 3).
input_move(red, 4, 2, 4, 3).
input_move(red, 4, 2, 4, 1).
input_move(red, 4, 2, 3, 2).
input_move(red, 4, 1, 4, 2).
input_move(red, 4, 1, 3, 1).
input_move(red, 3, 4, 4, 4).
input_move(red, 3, 4, 3, 3).
input_move(red, 3, 4, 2, 4).
input_move(red, 3, 3, 4, 3).
input_move(red, 3, 3, 3, 4).
input_move(red, 3, 3, 3, 2).
input_move(red, 3, 3, 2, 3).
input_move(red, 3, 2, 4, 2).
input_move(red, 3, 2, 3, 3).
input_move(red, 3, 2, 3, 1).
input_move(red, 3, 2, 2, 2).
input_move(red, 3, 1, 4, 1).
input_move(red, 3, 1, 3, 2).
input_move(red, 3, 1, 2, 1).
input_move(red, 2, 4, 3, 4).
input_move(red, 2, 4, 2, 3).
input_move(red, 2, 4, 1, 4).
input_move(red, 2, 3, 3, 3).
input_move(red, 2, 3, 2, 4).
input_move(red, 2, 3, 2, 2).
input_move(red, 2, 3, 1, 3).
input_move(red, 2, 2, 3, 2).
input_move(red, 2, 2, 2, 3).
input_move(red, 2, 2, 2, 1).
input_move(red, 2, 2, 1, 2).
input_move(red, 2, 1, 3, 1).
input_move(red, 2, 1, 2, 2).
input_move(red, 2, 1, 1, 1).
input_move(red, 1, 4, 2, 4).
input_move(red, 1, 4, 1, 3).
input_move(red, 1, 3, 2, 3).
input_move(red, 1, 3, 1, 4).
input_move(red, 1, 3, 1, 2).
input_move(red, 1, 2, 2, 2).
input_move(red, 1, 2, 1, 3).
input_move(red, 1, 2, 1, 1).
input_move(red, 1, 1, 2, 1).
input_move(red, 1, 1, 1, 2).
input_move(black, 4, 4, 4, 3).
input_move(black, 4, 4, 3, 4).
input_move(black, 4, 3, 4, 4).
input_move(black, 4, 3, 4, 2).
input_move(black, 4, 3, 3, 3).
input_move(black, 4, 2, 4, 3).
input_move(black, 4, 2, 4, 1).
input_move(black, 4, 2, 3, 2).
input_move(black, 4, 1, 4, 2).
input_move(black, 4, 1, 3, 1).
input_move(black, 3, 4, 4, 4).
input_move(black, 3, 4, 3, 3).
input_move(black, 3, 4, 2, 4).
input_move(black, 3, 3, 4, 3).
input_move(black, 3, 3, 3, 4).
input_move(black, 3, 3, 3, 2).
input_move(black, 3, 3, 2, 3).
input_move(black, 3, 2, 4, 2).
input_move(black, 3, 2, 3, 3).
input_move(black, 3, 2, 3, 1).
input_move(black, 3, 2, 2, 2).
input_move(black, 3, 1, 4, 1).
input_move(black, 3, 1, 3, 2).
input_move(black, 3, 1, 2, 1).
input_move(black, 2, 4, 3, 4).
input_move(black, 2, 4, 2, 3).
input_move(black, 2, 4, 1, 4).
input_move(black, 2, 3, 3, 3).
input_move(black, 2, 3, 2, 4).
input_move(black, 2, 3, 2, 2).
input_move(black, 2, 3, 1, 3).
input_move(black, 2, 2, 3, 2).
input_move(black, 2, 2, 2, 3).
input_move(black, 2, 2, 2, 1).
input_move(black, 2, 2, 1, 2).
input_move(black, 2, 1, 3, 1).
input_move(black, 2, 1, 2, 2).
input_move(black, 2, 1, 1, 1).
input_move(black, 1, 4, 2, 4).
input_move(black, 1, 4, 1, 3).
input_move(black, 1, 3, 2, 3).
input_move(black, 1, 3, 1, 4).
input_move(black, 1, 3, 1, 2).
input_move(black, 1, 2, 2, 2).
input_move(black, 1, 2, 1, 3).
input_move(black, 1, 2, 1, 1).
input_move(black, 1, 1, 2, 1).
input_move(black, 1, 1, 1, 2).
input_jump(red, 4, 4, 4, 3, 4, 2).
input_jump(red, 4, 4, 3, 4, 2, 4).
input_jump(red, 4, 3, 4, 2, 4, 1).
input_jump(red, 4, 3, 3, 3, 2, 3).
input_jump(red, 4, 2, 4, 3, 4, 4).
input_jump(red, 4, 2, 3, 2, 2, 2).
input_jump(red, 4, 1, 4, 2, 4, 3).
input_jump(red, 4, 1, 3, 1, 2, 1).
input_jump(red, 3, 4, 3, 3, 3, 2).
input_jump(red, 3, 4, 2, 4, 1, 4).
input_jump(red, 3, 3, 3, 2, 3, 1).
input_jump(red, 3, 3, 2, 3, 1, 3).
input_jump(red, 3, 2, 3, 3, 3, 4).
input_jump(red, 3, 2, 2, 2, 1, 2).
input_jump(red, 3, 1, 3, 2, 3, 3).
input_jump(red, 3, 1, 2, 1, 1, 1).
input_jump(red, 2, 4, 3, 4, 4, 4).
input_jump(red, 2, 4, 2, 3, 2, 2).
input_jump(red, 2, 3, 3, 3, 4, 3).
input_jump(red, 2, 3, 2, 2, 2, 1).
input_jump(red, 2, 2, 3, 2, 4, 2).
input_jump(red, 2, 2, 2, 3, 2, 4).
input_jump(red, 2, 1, 3, 1, 4, 1).
input_jump(red, 2, 1, 2, 2, 2, 3).
input_jump(red, 1, 4, 2, 4, 3, 4).
input_jump(red, 1, 4, 1, 3, 1, 2).
input_jump(red, 1, 3, 2, 3, 3, 3).
input_jump(red, 1, 3, 1, 2, 1, 1).
input_jump(red, 1, 2, 2, 2, 3, 2).
input_jump(red, 1, 2, 1, 3, 1, 4).
input_jump(red, 1, 1, 2, 1, 3, 1).
input_jump(red, 1, 1, 1, 2, 1, 3).
input_jump(black, 4, 4, 4, 3, 4, 2).
input_jump(black, 4, 4, 3, 4, 2, 4).
input_jump(black, 4, 3, 4, 2, 4, 1).
input_jump(black, 4, 3, 3, 3, 2, 3).
input_jump(black, 4, 2, 4, 3, 4, 4).
input_jump(black, 4, 2, 3, 2, 2, 2).
input_jump(black, 4, 1, 4, 2, 4, 3).
input_jump(black, 4, 1, 3, 1, 2, 1).
input_jump(black, 3, 4, 3, 3, 3, 2).
input_jump(black, 3, 4, 2, 4, 1, 4).
input_jump(black, 3, 3, 3, 2, 3, 1).
input_jump(black, 3, 3, 2, 3, 1, 3).
input_jump(black, 3, 2, 3, 3, 3, 4).
input_jump(black, 3, 2, 2, 2, 1, 2).
input_jump(black, 3, 1, 3, 2, 3, 3).
input_jump(black, 3, 1, 2, 1, 1, 1).
input_jump(black, 2, 4, 3, 4, 4, 4).
input_jump(black, 2, 4, 2, 3, 2, 2).
input_jump(black, 2, 3, 3, 3, 4, 3).
input_jump(black, 2, 3, 2, 2, 2, 1).
input_jump(black, 2, 2, 3, 2, 4, 2).
input_jump(black, 2, 2, 2, 3, 2, 4).
input_jump(black, 2, 1, 3, 1, 4, 1).
input_jump(black, 2, 1, 2, 2, 2, 3).
input_jump(black, 1, 4, 2, 4, 3, 4).
input_jump(black, 1, 4, 1, 3, 1, 2).
input_jump(black, 1, 3, 2, 3, 3, 3).
input_jump(black, 1, 3, 1, 2, 1, 1).
input_jump(black, 1, 2, 2, 2, 3, 2).
input_jump(black, 1, 2, 1, 3, 1, 4).
input_jump(black, 1, 1, 2, 1, 3, 1).
input_jump(black, 1, 1, 1, 2, 1, 3).
input(red, noop).
input(black, noop).
index(4).
index(3).
index(2).
index(1).
incr(87, 100).
incr(75, 87).
incr(62, 75).
incr(50, 62).
incr(37, 50).
incr(25, 37).
incr(12, 25).
incr(0, 12).
horizontal(3, 4, 4, 4).
horizontal(3, 3, 4, 3).
horizontal(3, 2, 4, 2).
horizontal(3, 1, 4, 1).
horizontal(2, 4, 3, 4).
horizontal(2, 3, 3, 3).
horizontal(2, 2, 3, 2).
horizontal(2, 1, 3, 1).
horizontal(1, 4, 2, 4).
horizontal(1, 3, 2, 3).
horizontal(1, 2, 2, 2).
horizontal(1, 1, 2, 1).
doublet(4, 4, 4, 3).
doublet(4, 4, 3, 4).
doublet(4, 3, 4, 4).
doublet(4, 3, 4, 2).
doublet(4, 3, 3, 3).
doublet(4, 2, 4, 3).
doublet(4, 2, 4, 1).
doublet(4, 2, 3, 2).
doublet(4, 1, 4, 2).
doublet(4, 1, 3, 1).
doublet(3, 4, 4, 4).
doublet(3, 4, 3, 3).
doublet(3, 4, 2, 4).
doublet(3, 3, 4, 3).
doublet(3, 3, 3, 4).
doublet(3, 3, 3, 2).
doublet(3, 3, 2, 3).
doublet(3, 2, 4, 2).
doublet(3, 2, 3, 3).
doublet(3, 2, 3, 1).
doublet(3, 2, 2, 2).
doublet(3, 1, 4, 1).
doublet(3, 1, 3, 2).
doublet(3, 1, 2, 1).
doublet(2, 4, 3, 4).
doublet(2, 4, 2, 3).
doublet(2, 4, 1, 4).
doublet(2, 3, 3, 3).
doublet(2, 3, 2, 4).
doublet(2, 3, 2, 2).
doublet(2, 3, 1, 3).
doublet(2, 2, 3, 2).
doublet(2, 2, 2, 3).
doublet(2, 2, 2, 1).
doublet(2, 2, 1, 2).
doublet(2, 1, 3, 1).
doublet(2, 1, 2, 2).
doublet(2, 1, 1, 1).
doublet(1, 4, 2, 4).
doublet(1, 4, 1, 3).
doublet(1, 3, 2, 3).
doublet(1, 3, 1, 4).
doublet(1, 3, 1, 2).
doublet(1, 2, 2, 2).
doublet(1, 2, 1, 3).
doublet(1, 2, 1, 1).
doublet(1, 1, 2, 1).
doublet(1, 1, 1, 2).
distinctcell(4, 4, 4, 3).
distinctcell(4, 4, 4, 2).
distinctcell(4, 4, 4, 1).
distinctcell(4, 4, 3, 4).
distinctcell(4, 4, 3, 3).
distinctcell(4, 4, 3, 2).
distinctcell(4, 4, 3, 1).
distinctcell(4, 4, 2, 4).
distinctcell(4, 4, 2, 3).
distinctcell(4, 4, 2, 2).
distinctcell(4, 4, 2, 1).
distinctcell(4, 4, 1, 4).
distinctcell(4, 4, 1, 3).
distinctcell(4, 4, 1, 2).
distinctcell(4, 4, 1, 1).
distinctcell(4, 3, 4, 4).
distinctcell(4, 3, 4, 2).
distinctcell(4, 3, 4, 1).
distinctcell(4, 3, 3, 4).
distinctcell(4, 3, 3, 3).
distinctcell(4, 3, 3, 2).
distinctcell(4, 3, 3, 1).
distinctcell(4, 3, 2, 4).
distinctcell(4, 3, 2, 3).
distinctcell(4, 3, 2, 2).
distinctcell(4, 3, 2, 1).
distinctcell(4, 3, 1, 4).
distinctcell(4, 3, 1, 3).
distinctcell(4, 3, 1, 2).
distinctcell(4, 3, 1, 1).
distinctcell(4, 2, 4, 4).
distinctcell(4, 2, 4, 3).
distinctcell(4, 2, 4, 1).
distinctcell(4, 2, 3, 4).
distinctcell(4, 2, 3, 3).
distinctcell(4, 2, 3, 2).
distinctcell(4, 2, 3, 1).
distinctcell(4, 2, 2, 4).
distinctcell(4, 2, 2, 3).
distinctcell(4, 2, 2, 2).
distinctcell(4, 2, 2, 1).
distinctcell(4, 2, 1, 4).
distinctcell(4, 2, 1, 3).
distinctcell(4, 2, 1, 2).
distinctcell(4, 2, 1, 1).
distinctcell(4, 1, 4, 4).
distinctcell(4, 1, 4, 3).
distinctcell(4, 1, 4, 2).
distinctcell(4, 1, 3, 4).
distinctcell(4, 1, 3, 3).
distinctcell(4, 1, 3, 2).
distinctcell(4, 1, 3, 1).
distinctcell(4, 1, 2, 4).
distinctcell(4, 1, 2, 3).
distinctcell(4, 1, 2, 2).
distinctcell(4, 1, 2, 1).
distinctcell(4, 1, 1, 4).
distinctcell(4, 1, 1, 3).
distinctcell(4, 1, 1, 2).
distinctcell(4, 1, 1, 1).
distinctcell(3, 4, 4, 4).
distinctcell(3, 4, 4, 3).
distinctcell(3, 4, 4, 2).
distinctcell(3, 4, 4, 1).
distinctcell(3, 4, 3, 3).
distinctcell(3, 4, 3, 2).
distinctcell(3, 4, 3, 1).
distinctcell(3, 4, 2, 4).
distinctcell(3, 4, 2, 3).
distinctcell(3, 4, 2, 2).
distinctcell(3, 4, 2, 1).
distinctcell(3, 4, 1, 4).
distinctcell(3, 4, 1, 3).
distinctcell(3, 4, 1, 2).
distinctcell(3, 4, 1, 1).
distinctcell(3, 3, 4, 4).
distinctcell(3, 3, 4, 3).
distinctcell(3, 3, 4, 2).
distinctcell(3, 3, 4, 1).
distinctcell(3, 3, 3, 4).
distinctcell(3, 3, 3, 2).
distinctcell(3, 3, 3, 1).
distinctcell(3, 3, 2, 4).
distinctcell(3, 3, 2, 3).
distinctcell(3, 3, 2, 2).
distinctcell(3, 3, 2, 1).
distinctcell(3, 3, 1, 4).
distinctcell(3, 3, 1, 3).
distinctcell(3, 3, 1, 2).
distinctcell(3, 3, 1, 1).
distinctcell(3, 2, 4, 4).
distinctcell(3, 2, 4, 3).
distinctcell(3, 2, 4, 2).
distinctcell(3, 2, 4, 1).
distinctcell(3, 2, 3, 4).
distinctcell(3, 2, 3, 3).
distinctcell(3, 2, 3, 1).
distinctcell(3, 2, 2, 4).
distinctcell(3, 2, 2, 3).
distinctcell(3, 2, 2, 2).
distinctcell(3, 2, 2, 1).
distinctcell(3, 2, 1, 4).
distinctcell(3, 2, 1, 3).
distinctcell(3, 2, 1, 2).
distinctcell(3, 2, 1, 1).
distinctcell(3, 1, 4, 4).
distinctcell(3, 1, 4, 3).
distinctcell(3, 1, 4, 2).
distinctcell(3, 1, 4, 1).
distinctcell(3, 1, 3, 4).
distinctcell(3, 1, 3, 3).
distinctcell(3, 1, 3, 2).
distinctcell(3, 1, 2, 4).
distinctcell(3, 1, 2, 3).
distinctcell(3, 1, 2, 2).
distinctcell(3, 1, 2, 1).
distinctcell(3, 1, 1, 4).
distinctcell(3, 1, 1, 3).
distinctcell(3, 1, 1, 2).
distinctcell(3, 1, 1, 1).
distinctcell(2, 4, 4, 4).
distinctcell(2, 4, 4, 3).
distinctcell(2, 4, 4, 2).
distinctcell(2, 4, 4, 1).
distinctcell(2, 4, 3, 4).
distinctcell(2, 4, 3, 3).
distinctcell(2, 4, 3, 2).
distinctcell(2, 4, 3, 1).
distinctcell(2, 4, 2, 3).
distinctcell(2, 4, 2, 2).
distinctcell(2, 4, 2, 1).
distinctcell(2, 4, 1, 4).
distinctcell(2, 4, 1, 3).
distinctcell(2, 4, 1, 2).
distinctcell(2, 4, 1, 1).
distinctcell(2, 3, 4, 4).
distinctcell(2, 3, 4, 3).
distinctcell(2, 3, 4, 2).
distinctcell(2, 3, 4, 1).
distinctcell(2, 3, 3, 4).
distinctcell(2, 3, 3, 3).
distinctcell(2, 3, 3, 2).
distinctcell(2, 3, 3, 1).
distinctcell(2, 3, 2, 4).
distinctcell(2, 3, 2, 2).
distinctcell(2, 3, 2, 1).
distinctcell(2, 3, 1, 4).
distinctcell(2, 3, 1, 3).
distinctcell(2, 3, 1, 2).
distinctcell(2, 3, 1, 1).
distinctcell(2, 2, 4, 4).
distinctcell(2, 2, 4, 3).
distinctcell(2, 2, 4, 2).
distinctcell(2, 2, 4, 1).
distinctcell(2, 2, 3, 4).
distinctcell(2, 2, 3, 3).
distinctcell(2, 2, 3, 2).
distinctcell(2, 2, 3, 1).
distinctcell(2, 2, 2, 4).
distinctcell(2, 2, 2, 3).
distinctcell(2, 2, 2, 1).
distinctcell(2, 2, 1, 4).
distinctcell(2, 2, 1, 3).
distinctcell(2, 2, 1, 2).
distinctcell(2, 2, 1, 1).
distinctcell(2, 1, 4, 4).
distinctcell(2, 1, 4, 3).
distinctcell(2, 1, 4, 2).
distinctcell(2, 1, 4, 1).
distinctcell(2, 1, 3, 4).
distinctcell(2, 1, 3, 3).
distinctcell(2, 1, 3, 2).
distinctcell(2, 1, 3, 1).
distinctcell(2, 1, 2, 4).
distinctcell(2, 1, 2, 3).
distinctcell(2, 1, 2, 2).
distinctcell(2, 1, 1, 4).
distinctcell(2, 1, 1, 3).
distinctcell(2, 1, 1, 2).
distinctcell(2, 1, 1, 1).
distinctcell(1, 4, 4, 4).
distinctcell(1, 4, 4, 3).
distinctcell(1, 4, 4, 2).
distinctcell(1, 4, 4, 1).
distinctcell(1, 4, 3, 4).
distinctcell(1, 4, 3, 3).
distinctcell(1, 4, 3, 2).
distinctcell(1, 4, 3, 1).
distinctcell(1, 4, 2, 4).
distinctcell(1, 4, 2, 3).
distinctcell(1, 4, 2, 2).
distinctcell(1, 4, 2, 1).
distinctcell(1, 4, 1, 3).
distinctcell(1, 4, 1, 2).
distinctcell(1, 4, 1, 1).
distinctcell(1, 3, 4, 4).
distinctcell(1, 3, 4, 3).
distinctcell(1, 3, 4, 2).
distinctcell(1, 3, 4, 1).
distinctcell(1, 3, 3, 4).
distinctcell(1, 3, 3, 3).
distinctcell(1, 3, 3, 2).
distinctcell(1, 3, 3, 1).
distinctcell(1, 3, 2, 4).
distinctcell(1, 3, 2, 3).
distinctcell(1, 3, 2, 2).
distinctcell(1, 3, 2, 1).
distinctcell(1, 3, 1, 4).
distinctcell(1, 3, 1, 2).
distinctcell(1, 3, 1, 1).
distinctcell(1, 2, 4, 4).
distinctcell(1, 2, 4, 3).
distinctcell(1, 2, 4, 2).
distinctcell(1, 2, 4, 1).
distinctcell(1, 2, 3, 4).
distinctcell(1, 2, 3, 3).
distinctcell(1, 2, 3, 2).
distinctcell(1, 2, 3, 1).
distinctcell(1, 2, 2, 4).
distinctcell(1, 2, 2, 3).
distinctcell(1, 2, 2, 2).
distinctcell(1, 2, 2, 1).
distinctcell(1, 2, 1, 4).
distinctcell(1, 2, 1, 3).
distinctcell(1, 2, 1, 1).
distinctcell(1, 1, 4, 4).
distinctcell(1, 1, 4, 3).
distinctcell(1, 1, 4, 2).
distinctcell(1, 1, 4, 1).
distinctcell(1, 1, 3, 4).
distinctcell(1, 1, 3, 3).
distinctcell(1, 1, 3, 2).
distinctcell(1, 1, 3, 1).
distinctcell(1, 1, 2, 4).
distinctcell(1, 1, 2, 3).
distinctcell(1, 1, 2, 2).
distinctcell(1, 1, 2, 1).
distinctcell(1, 1, 1, 4).
distinctcell(1, 1, 1, 3).
distinctcell(1, 1, 1, 2).




















type(agent, red).
agent(red).

type(agent, black).
agent(black).

type(mark, blank).
mark(blank).

type(pos, 1).
pos(1).

type(pos, 2).
pos(2).

type(pos, 3).
pos(3).

type(pos, 4).
pos(4).

type(int, 0).
int(0).

type(int, 5).
int(5).

type(int, 6).
int(6).

type(int, 7).
int(7).

type(int, 8).
int(8).

type(int, 9).
int(9).

type(int, 10).
int(10).

type(int, 11).
int(11).

type(int, 12).
int(12).

type(int, 13).
int(13).

type(int, 14).
int(14).

type(int, 15).
int(15).

type(int, 16).
int(16).

type(int, 17).
int(17).

type(int, 18).
int(18).

type(int, 19).
int(19).

type(int, 20).
int(20).

type(int, 21).
int(21).

type(int, 22).
int(22).

type(int, 23).
int(23).

type(int, 24).
int(24).

type(int, 25).
int(25).

type(int, 26).
int(26).

type(int, 27).
int(27).

type(int, 28).
int(28).

type(int, 29).
int(29).

type(int, 30).
int(30).

type(int, 37).
int(37).

type(int, 50).
int(50).

type(int, 62).
int(62).

type(int, 75).
int(75).

type(int, 87).
int(87).

type(int, 100).
int(100).

type(action, noop).
action(noop).











type(mark, red).
mark(red).

type(mark, black).
mark(black).

type(int, 1).
int(1).

type(int, 2).
int(2).

type(int, 3).
int(3).

type(int, 4).
int(4).

true_step(1).
true_score(red, 0).
true_score(black, 0).
true_control(red).
true_cell(4, 4, red).
true_cell(4, 3, red).
true_cell(4, 2, red).
true_cell(4, 1, red).
true_cell(3, 4, red).
true_cell(3, 3, red).
true_cell(3, 2, red).
true_cell(3, 1, red).
true_cell(2, 4, black).
true_cell(2, 3, black).
true_cell(2, 2, black).
true_cell(2, 1, black).
true_cell(1, 4, black).
true_cell(1, 3, black).
true_cell(1, 2, black).
true_cell(1, 1, black).
does_jump(red, 4, 4, 3, 4, 2, 4).
does(black, noop).
inc(0) :- not next_cell(4, 4, blank).
inc(1) :- not next_cell(4, 3, red).
inc(2) :- not next_cell(4, 2, red).
inc(3) :- not next_cell(4, 1, red).
inc(4) :- not next_cell(3, 4, red).
inc(5) :- not next_cell(3, 3, red).
inc(6) :- not next_cell(3, 2, red).
inc(7) :- not next_cell(3, 1, red).
inc(8) :- not next_cell(2, 4, red).
inc(9) :- not next_cell(2, 3, black).
inc(10) :- not next_cell(2, 2, black).
inc(11) :- not next_cell(2, 1, black).
inc(12) :- not next_cell(1, 4, black).
inc(13) :- not next_cell(1, 3, black).
inc(14) :- not next_cell(1, 2, black).
inc(15) :- not next_cell(1, 1, black).
exc(0) :- next_cell(4, 4, red).
exc(1) :- next_cell(4, 4, black).
exc(2) :- next_cell(4, 3, blank).
exc(3) :- next_cell(4, 3, black).
exc(4) :- next_cell(4, 2, blank).
exc(5) :- next_cell(4, 2, black).
exc(6) :- next_cell(4, 1, blank).
exc(7) :- next_cell(4, 1, black).
exc(8) :- next_cell(3, 4, blank).
exc(9) :- next_cell(3, 4, black).
exc(10) :- next_cell(3, 3, blank).
exc(11) :- next_cell(3, 3, black).
exc(12) :- next_cell(3, 2, blank).
exc(13) :- next_cell(3, 2, black).
exc(14) :- next_cell(3, 1, blank).
exc(15) :- next_cell(3, 1, black).
exc(16) :- next_cell(2, 4, blank).
exc(17) :- next_cell(2, 4, black).
exc(18) :- next_cell(2, 3, red).
exc(19) :- next_cell(2, 3, blank).
exc(20) :- next_cell(2, 2, red).
exc(21) :- next_cell(2, 2, blank).
exc(22) :- next_cell(2, 1, red).
exc(23) :- next_cell(2, 1, blank).
exc(24) :- next_cell(1, 4, red).
exc(25) :- next_cell(1, 4, blank).
exc(26) :- next_cell(1, 3, red).
exc(27) :- next_cell(1, 3, blank).
exc(28) :- next_cell(1, 2, red).
exc(29) :- next_cell(1, 2, blank).
exc(30) :- next_cell(1, 1, red).
exc(31) :- next_cell(1, 1, blank).
#show inc/1.
#show exc/1.

