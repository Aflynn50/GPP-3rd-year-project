%parsed
Iteration 0:
solving
H = {
}
inc: 0; exc: 0
--------------------------------------------
Iteration 1:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 0; exc: 1
--------------------------------------------
Iteration 2:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- vertical(V1, V2, V1, V4), agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4).
}
inc: 0; exc: 2
--------------------------------------------
Iteration 3:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- vertical(V1, V3, V1, V2), agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 0; exc: 3
--------------------------------------------
Iteration 4:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- triplet(V1, V1, V1, V4, V1, V2), agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4).
}
inc: 0; exc: 4
--------------------------------------------
Iteration 5:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- true_step(V1), agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 0; exc: 5
--------------------------------------------
Iteration 6:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- not true_control(V0), agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 0; exc: 6
--------------------------------------------
Iteration 7:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- V3 = 1, agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 0; exc: 7
--------------------------------------------
Iteration 8:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- vertical(V1, V2, V1, V4), vertical(V1, V3, V1, V2), agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4).
}
inc: 0; exc: 8
--------------------------------------------
Iteration 9:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- vertical(V1, V2, V1, V4), true_step(V1), agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4).
}
inc: 0; exc: 9
--------------------------------------------
Iteration 10:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- vertical(V1, V2, V1, V4), not true_control(V0), agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4).
}
inc: 0; exc: 10
--------------------------------------------
Iteration 11:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- vertical(V1, V2, V1, V4), V3 = 1, agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4).
}
inc: 0; exc: 11
--------------------------------------------
Iteration 12:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- vertical(V1, V3, V1, V2), triplet(V1, V1, V1, V4, V1, V2), agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4).
}
inc: 0; exc: 12
--------------------------------------------
Iteration 13:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- vertical(V1, V3, V1, V2), true_step(V1), agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 0; exc: 13
--------------------------------------------
Iteration 14:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- vertical(V1, V3, V1, V2), not true_control(V0), agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 0; exc: 14
--------------------------------------------
Iteration 15:
solving
H = {
legal_move(V0, V1, V2, V1, V3) :- triplet(V1, V1, V1, V4, V1, V2), not true_control(V0), agent(V0), mark(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4).
}
inc: 0; exc: 15
