%parsed
Iteration 0:
solving
H = {
}
inc: 0; exc: 0
--------------------------------------------
Iteration 1:
solving
H = {
legal_move(V0, V1, V1, V2, V3) :- agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 0; exc: 1
--------------------------------------------
Iteration 2:
solving
H = {
legal_move(V0, V1, V1, V2, V3) :- scoreMap(V3, V10), agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V10), int(V10).
}
inc: 1; exc: 1
--------------------------------------------
Iteration 3:
solving
H = {
legal_move(V0, V1, V1, V2, V3) :- row(V3), agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 0; exc: 2
inc: 1; exc: 2
--------------------------------------------
Iteration 4:
solving
H = {
legal_move(V0, V1, V1, V2, V3) :- row(V2), agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 0; exc: 3
inc: 1; exc: 3
--------------------------------------------
Iteration 5:
solving
H = {
legal_move(V0, V1, V1, V2, V3) :- row(V1), agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 0; exc: 4
inc: 1; exc: 4
--------------------------------------------
Iteration 6:
solving
H = {
legal_move(V0, V1, V1, V2, V3) :- knightMove(V10, V3, V12, V1), agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V10), int(V10), pos(V12), int(V12).
}
inc: 0; exc: 5
inc: 1; exc: 5
--------------------------------------------
Iteration 7:
solving
H = {
legal_move(V0, V1, V1, V2, V3) :- knightMove(V10, V3, V14, V2), agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V10), int(V10), pos(V14), int(V14).
}
inc: 0; exc: 6
inc: 1; exc: 6
--------------------------------------------
Iteration 8:
solving
H = {
legal_move(V0, V1, V1, V2, V3) :- knightMove(V10, V2, V14, V1), agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V10), int(V10), pos(V14), int(V14).
}
inc: 0; exc: 7
inc: 1; exc: 7
--------------------------------------------
Iteration 9:
solving
H = {
legal_move(V0, V1, V1, V2, V3) :- knightMove(V3, V2, V1, V1), agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 0; exc: 8
inc: 1; exc: 8
--------------------------------------------
Iteration 10:
solving
H = {
legal_move(V0, V1, V1, V2, V3) :- add(V1, V54, V14, V12), agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V12), int(V12), pos(V14), int(V14), add_arg(V54).
}
inc: 0; exc: 9
inc: 1; exc: 9
--------------------------------------------
Iteration 11:
solving
H = {
legal_move(V0, V1, V1, V2, V3) :- add(V1, V54, V3, V14), agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V14), int(V14), add_arg(V54).
}
inc: 0; exc: 10
inc: 1; exc: 10
--------------------------------------------
Iteration 12:
solving
H = {
legal_move(V0, V1, V1, V2, V3) :- add(V1, V56, V51, V1), agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), int(V51), add_arg(V56).
gal_move(V0, V1, V2, V3, V1) :- succ(V16, V1), true_captures(V1), agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V16), int(V16).
legal_move(V0, V1, V2, V2, V3) :- true_step(V2), agent(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3).
}
inc: 0; exc: 11
inc: 1; exc: 11
