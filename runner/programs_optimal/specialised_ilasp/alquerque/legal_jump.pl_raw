%parsed
Iteration 0:
solving
H = {
egal_jump(V0, V1, V2) :- succ(V5, V2), succ(V6, V5), succ(V1, V6), agent(V0), pos(V1), pos(V2), pos(V5), pos(V6).
legal_jump(V0, V1, V2) :- true_step(V6), V1 = 8, V2 = 4, V6 = 3, agent(V0), pos(V1), pos(V2), pos(V6).
legal_jump(V0, V1, V2) :- succ(V6, V1), succ(V7, V6), succ(V8, V7), true_step(V6), agent(V0), pos(V1), pos(V2), pos(V6), pos(V7), pos(V8).
legal_jump(V0, V1, V2) :- succ(V4, V1), succ(V5, V4), succ(V2, V5), not true_step(V6), V6 = 3, agent(V0), pos(V1), pos(V2), pos(V4), pos(V5), pos(V6).
legal_jump(V0, V1, V2) :- true_cell(V1, V10), true_cell(V2, V11), true_cell(V7, V10), V7 = 2, V11 = zerocoins, agent(V0), pos(V1), pos(V2), pos(V7), cell_value(V10), cell_value(V11).
legal_jump(V0, V1, V2) :- true_step(V1), V1 = 3, agent(V0), pos(V1), pos(V2).
legal_jump(V0, V1, V2) :- true_step(V2), V1 = 1, agent(V0), pos(V1), pos(V2).
}
inc: 0; exc: 0
--------------------------------------------
Iteration 1:
solving
H = {
legal_jump(V0, V1, V2, V3, V2, V4, V2) :- agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4).
}
inc: 0; exc: 1
--------------------------------------------
Iteration 2:
solving
H = {
legal_jump(V0, V1, V2, V3, V2, V4, V2) :- vertical(V5, V4, V5, V5), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 2
--------------------------------------------
Iteration 3:
solving
H = {
legal_jump(V0, V1, V2, V3, V2, V4, V2) :- vertical(V5, V3, V5, V4), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 3
--------------------------------------------
Iteration 4:
solving
H = {
legal_jump(V0, V1, V2, V3, V2, V4, V2) :- vertical(V5, V1, V5, V3), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 4
--------------------------------------------
Iteration 5:
solving
H = {
legal_jump(V0, V1, V2, V3, V2, V4, V2) :- vertical(V5, V2, V5, V1), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 5
--------------------------------------------
Iteration 6:
solving
H = {
legal_jump(V0, V1, V2, V3, V2, V4, V2) :- triplet(V5, V4, V5, V3, V5, V1), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 6
--------------------------------------------
Iteration 7:
solving
H = {
legal_jump(V0, V1, V2, V3, V2, V4, V2) :- triplet(V5, V3, V5, V1, V5, V2), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 7
--------------------------------------------
Iteration 8:
solving
H = {
legal_jump(V0, V1, V2, V3, V2, V4, V2) :- slash(V5, V3, V4, V4), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 8
--------------------------------------------
Iteration 9:
solving
H = {
legal_jump(V0, V1, V2, V3, V2, V4, V2) :- slash(V5, V2, V4, V1), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4), pos(V5), int(V5).
}
inc: 0; exc: 9
--------------------------------------------
Iteration 10:
solving
H = {
legal_jump(V0, V1, V2, V3, V2, V4, V2) :- slash(V4, V1, V3, V3), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4).
}
inc: 0; exc: 10
--------------------------------------------
Iteration 11:
solving
H = {
legal_jump(V0, V1, V2) :- true_step(V6), V1 = 8, V2 = 4, V6 = 3, agent(V0), pos(V1), pos(V2), pos(V6).
legal_jump(V0, V1, V2) :- succ(V6, V1), succ(V7, V6), succ(V8, V7), true_step(V6), V2 = 8, agent(V0), pos(V1), pos(V2), pos(V6), pos(V7), pos(V8).
legal_jump(V0, V1, V2) :- succ(V4, V1), succ(V5, V4), succ(V2, V5), not true_step(V6), V6 = 3, agent(V0), pos(V1), pos(V2), pos(V4), pos(V5), pos(V6).
legal_jump(V0, V1, V2) :- succ(V7, V2), succ(V8, V7), true_step(V2), V1 = 7, agent(V0), pos(V1), pos(V2), pos(V7), pos(V8).
legal_jump(V0, V1, V2) :- true_step(V1), V1 = 3, V2 = 7, agent(V0), pos(V1), pos(V2).
legal_jump(V0, V1, V2) :- succ(V8, V2), succ(V1, V8), true_step(V2), agent(V0), pos(V1), pos(V2), pos(V8).
legal_jump(V0, V1, V2) :- succ(V4, V2), succ(V5, V4), succ(V1, V5), not true_step(V6), V6 = 3, agent(V0), pos(V1), pos(V2), pos(V4), pos(V5), pos(V6).
legal_jump(V0, V1, V2) :- succ(V8, V1), succ(V2, V8), true_step(V1), agent(V0), pos(V1), pos(V2), pos(V8).
legal_jump(V0, V1, V2) :- true_cell(V2, V10), not true_step(V6), V1 = 8, V6 = 3, V10 = zerocoins, agent(V0), pos(V1), pos(V2), pos(V6), cell_value(V10).
legal_jump(V0, V1, V2) :- true_cell(V1, V10), not true_step(V6), V2 = 8, V6 = 3, V10 = zerocoins, agent(V0), pos(V1), pos(V2), pos(V6), cell_value(V10).
}
inc: 1; exc: 10
--------------------------------------------
Iteration 12:
solving
H = {
legal_jump(V0, V1, V2) :- succ(V5, V1), succ(V6, V5), succ(V2, V6), true_step(V8), V8 = 1, agent(V0), pos(V1), pos(V2), pos(V5), pos(V6), pos(V8).
legal_jump(V0, V1, V2) :- succ(V5, V2), succ(V6, V5), succ(V1, V6), true_step(V8), V8 = 1, agent(V0), pos(V1), pos(V2), pos(V5), pos(V6), pos(V8).
legal_jump(V0, V1, V2) :- true_step(V6), V1 = 8, V2 = 4, V6 = 3, agent(V0), pos(V1), pos(V2), pos(V6).
legal_jump(V0, V1, V2) :- succ(V7, V6), succ(V8, V7), true_step(V6), V1 = 4, V2 = 8, agent(V0), pos(V1), pos(V2), pos(V6), pos(V7), pos(V8).
legal_jump(V0, V1, V2) :- succ(V5, V1), succ(V6, V5), succ(V2, V6), true_step(V7), V7 = 2, agent(V0), pos(V1), pos(V2), pos(V5), pos(V6), pos(V7).
legal_jump(V0, V1, V2) :- true_step(V2), V1 = 7, V2 = 3, agent(V0), pos(V1), pos(V2).
legal_jump(V0, V1, V2) :- true_step(V1), V1 = 3, V2 = 7, agent(V0), pos(V1), pos(V2).
legal_jump(V0, V1, V2) :- succ(V5, V2), succ(V6, V5), succ(V1, V6), true_step(V7), V7 = 2, agent(V0), pos(V1), pos(V2), pos(V5), pos(V6), pos(V7).
legal_jump(V0, V1, V2) :- true_step(V5), V1 = 8, V2 = 6, V5 = 4, agent(V0), pos(V1), pos(V2), pos(V5).
legal_jump(V0, V1, V2) :- true_step(V5), V1 = 6, V5 = 4, agent(V0), pos(V1), pos(V2), pos(V5).
legal_jump(V0, V1, V2) :- succ(V7, V1), succ(V8, V7), true_step(V1), V2 = 1, agent(V0), pos(V1), pos(V2), pos(V7), pos(V8).
legal_jump(V0, V1, V2) :- succ(V7, V2), true_step(V2), V1 = 1, agent(V0), pos(V1), pos(V2), pos(V7).
}
inc: 1; exc: 10
--------------------------------------------
Iteration 13:
solving
H = {
legal_jump(V0, V1, V2, V3, V2, V4, V2) :- slash(V3, V2, V1, V1), agent(V0), cell_type(V0), pos(V1), int(V1), pos(V2), int(V2), pos(V3), int(V3), pos(V4), int(V4).
}
inc: 0; exc: 11
